{"version":3,"sources":["components/atoms/Wrapper/Wrapper.tsx","routes/index.ts","context.ts","components/atoms/Logo/Logo.tsx","components/atoms/Burger/Burger.tsx","store/cycle/types.ts","store/cycle/actions.ts","components/atoms/Button/Button.tsx","components/atoms/NavLinkItem/NavLinkItem.tsx","components/molecules/NavList/NavList.tsx","components/organisms/Navigation/Navigation.tsx","templates/PageTemplate.tsx","components/atoms/Time/Time.tsx","components/molecules/Timer/Timer.tsx","components/atoms/CycleItem/CycleItem.tsx","components/molecules/CycleProgress/CycleProgress.tsx","components/atoms/Label/Label.tsx","components/molecules/TimerBox/TimerBox.tsx","components/organisms/TimerPanel/TimerPanel.tsx","components/atoms/PageTitle/PageTitle.tsx","store/projects/types.ts","components/atoms/Input/Input.tsx","components/atoms/IconButton/IconButton.tsx","components/atoms/Count/Count.tsx","components/atoms/NoData/NoData.tsx","components/molecules/ProjectList/ProjectList.tsx","store/projects/actions.ts","components/molecules/ProjectsDropDown/ProjectsDropDown.tsx","views/TimerPage.tsx","theme/GlobalStyle.ts","store/settings/types.ts","templates/MainTemplate.tsx","theme/mainTheme.ts","hooks/useInterval.ts","utils/index.ts","components/atoms/Close/Close.tsx","components/atoms/Headline/Headline.tsx","components/molecules/RadioCheck/RadioCheck.tsx","components/molecules/NumberInputBox/NumberInputBox.tsx","components/molecules/TimeInputBox/TimeInputBox.tsx","components/organisms/CycleModal/CycleModal.tsx","hooks/useClickOutside.ts","components/atoms/FormError/FormError.tsx","components/molecules/AddProject/AddProject.tsx","views/ProjectsPage.tsx","components/molecules/RadioForm/RadioForm.tsx","components/atoms/List/List.tsx","components/atoms/Arrow/Arrow.tsx","components/molecules/ReportHead/ReportHead.tsx","components/atoms/ListItem/ListItem.tsx","components/molecules/ReportList/ReportList.tsx","components/molecules/ReportsByDate/ReportsByDate.tsx","components/molecules/ReportsByProjects/ReportsByProjects.tsx","views/HistoryPage.tsx","views/SettingsPage.tsx","store/reports/types.ts","store/settings/actions.ts","store/reports/actions.ts","views/Root.tsx","store/projects/reducers.ts","store/cycle/reducers.ts","store/settings/reducers.ts","store/reports/reducers.ts","store/rootReducer.ts","store/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Routes","Wrapper","styled","div","AppContext","createContext","StyledLink","Link","StyledLogo","span","theme","colors","primary","Logo","to","timer","BurgerButton","button","BurgerBody","isActive","css","Burger","SessionEnum","CycleEnum","CyclesTypes","handleClick","isVisible","type","onClick","clearCycle","CLEAR_CYCLE","Button","withMargin","background","asPrimary","asDelete","error","copy","NavLinkItem","NavLink","secondary","background60","InnerWrapper","Buttons","List","ul","ListItem","li","StyledButton","StyleButtonMargin","mapDispatch","connector","connect","cycle","isRunning","sessionPosition","onOpenModal","projects","history","settings","disabled","Nav","nav","Navigation","handleOpenModal","useContext","useState","isMenuVisible","toggleMenuVisibility","useEffect","document","body","style","overflow","window","scrollTo","handleBurgerClick","prevState","Main","main","isSubPage","PageTemplate","children","Time","TimerWrapper","asMain","Timer","hours","minutes","seconds","CycleItem","background40","fillDot","StyledList","StyledItem","CycleProgress","map","item","key","released","Label","label","asCopy","asMedium","asLarge","Wraper","TimerBox","isMain","isCycle","time","nextSession","getSeconds","ms","Math","floor","getMinutes","as","nextSessionPosition","nextTime","currentTime","customCycle","_","index","cyclePosition","onStartCountdow","onPauseCountdown","onStopCountdown","isInitialView","setInitialView","stopClickHandler","ProjectsTypes","PageTitle","h1","screenreaderOnly","Input","input","asBox","focusBackgorund","background20","IconButton","withBorder","asAdd","asSubtract","asClose","Count","NoData","itemIn","keyframes","noRemove","ItemWrapper","StyledCount","removeProject","id","projectId","REMOVE_PROJECT","payload","getProject","length","p","name","sessionCount","InputWrapper","StyledInput","Icon","ProjectsDropDown","dispatch","useDispatch","isListVisible","toggleListVisibility","useSelector","projectsList","currentProject","projectSelected","value","project","SET_SELECTED_PROJECT","TimerView","ThemeColorTypes","SettingsTypes","ThemeOptions","GlobalStyle","createGlobalStyle","themeDark","themeLight","MainTemplate","themeColor","state","colorTheme","DARK","useInterval","callback","delay","isTimerOnInitial","isTimerOn","toggleTimer","savedCallback","useRef","intervalId","current","setInterval","clearInterval","numberReturn","Number","generateUnicId","ids","String","random","includes","getFormat","date","year","getFullYear","month","getMonth","day","getDate","Close","Headline","customWidth","Checkmark","StyledLabel","marginTop","RadioCheck","onChange","checked","BoxWrapper","StyledIconButton","NumberInputBox","maxValue","prevValue","e","eventValue","currentTarget","InputBreak","TimeInputBox","convertToMilliseconds","valuesData","eValue","min","sec","scale","BoxModal","BoxModalWrapper","RadioForm","form","Form","SesionNumber","sameData","sessionNumber","sessionTime","restTime","customData","CycleModal","onClose","isClearChecked","toggleClearChecked","isSameSession","toggleSession","sameValues","setSameValues","customValues","setCustomValues","modalRef","ref","handleClickCallback","useCallback","event","contains","target","addEventListener","removeEventListener","useClickOutside","getSameValue","getCustomValue","i","onSubmit","preventDefault","newSession","output","Array","fill","ACTION","REST","some","CLEAR_AND_ADD_TO_CYCLE","ADD_TO_CYCLE","addToCycle","find","el","unicId","FormError","asCommunicat","AddProject","newProjectValue","setNewProjectValue","isTooLong","toggleLongStatus","setError","isTheSameNameExist","isTheSameNameExistCallback","newProject","ADD_PROJECT","placeholder","ProjectsPage","inputs","Arrow","StyledHeadline","StyledArrow","ReportHead","title","count","listOpen","SessionItem","SessionDetails","ReportList","sessions","ReportsByDate","reports","openList","setOpenList","projectList","prev","session","actionTime","ReportsByProjects","HistoryPage","isByDate","toggleByDate","sortByDate","setSortByDate","sortByProjects","setSortByProjects","arr","forEach","r","isIndexProjectExist","findIndex","push","existingProject","indexIfDateExist","setHours","reportsByDate","indexIfProjectExist","projectExist","ReportsTypes","DefaultTimeBox","Section","section","setThemeColor","option","SET_THEME_COLOR","setDefaultCycle","SET_DEFAULT_CYCLE","defaultCycle","LIGHT","setCurrentTime","SET_CURRENT_TIME","setCurrentType","SET_CURRENT_TYPE","toggleTimerRunning","TOGGLE_TIMER_RUNNING","setCyclePosition","position","SET_CYCLE_POSITION","setSessionInProgress","isInProgress","SET_SESSION_IN_PROGRESS","addReport","newReport","ADD_REPORT","updateReport","report","UPDATE_REPORT","setSessionPosition","SET_SESSION_POSITION","setNextSessionPosition","SET_NEXT_SESSION_POSITION","setNextTime","SET_NEXT_TIME","isSessionInProgress","isModalVisible","toggleModalVisibility","sessionId","currentSession","setCurrentSession","getCycle","getCycleType","cycleType","setCycleType","setCycle","curCyclePosition","setCurCyclePosition","curSessionPosition","setCurSessionPosition","getNextTimeCallback","start","stop","handleCloseModal","AppContextElements","Date","Provider","exact","path","component","TimerPage","SettingsPage","initialState","currentType","nextType","rootReducer","combineReducers","action","filter","UPDATE_PROJECT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.60453d72.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 1600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n\r\n  @media (min-width: 600px) {\r\n    padding: 40px;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 60px;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","export enum Routes {\r\n  timer = '/',\r\n  projects = '/projects',\r\n  history = '/pomodoro-history',\r\n  settings = '/settings',\r\n}\r\n","import { createContext } from 'react';\r\nimport { Session } from 'store/cycle/types';\r\n\r\ninterface AppContextProps {\r\n  handleOpenModal: () => void;\r\n  onStartCountdow: () => void;\r\n  onPauseCountdown: () => void;\r\n  onStopCountdown: () => void;\r\n  session?: Session;\r\n  nextSession?: Session;\r\n}\r\n\r\nexport const AppContext = createContext({} as AppContextProps);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Routes } from 'routes';\r\n\r\nconst StyledLink = styled(Link)`\r\n  position: relative;\r\n  z-index: 110;\r\n  display: inline-block;\r\n  padding: 2px 10px 8px 10px;\r\n  margin: 0 0 0 -10px;\r\n  text-decoration: none;\r\n\r\n  @media (min-widh: 960px) {\r\n    padding: 4px 10px 10px 10px;\r\n    margin: 0 0 0 -10px;\r\n  }\r\n`;\r\n\r\nconst StyledLogo = styled.span`\r\n  display: block;\r\n  padding: 0;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 26px;\r\n  letter-spacing: -0.06em;\r\n  line-height: 1;\r\n\r\n  @media (min-width: 960px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst Logo = () => (\r\n  <StyledLink to={Routes.timer}>\r\n    <StyledLogo>pomodoro</StyledLogo>\r\n  </StyledLink>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst BurgerButton = styled.button`\r\n  position: relative;\r\n  z-index: 110;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 0;\r\n  border: 0;\r\n  margin: 0;\r\n  background: none;\r\n  transform: rotate(0);\r\n  transition: transform 0.25s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst BurgerBody = styled.span<{ isActive: boolean }>`\r\n  display: block;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    width: 24px;\r\n    height: 2px;\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    transition: transform 0.25s ease-in-out;\r\n  }\r\n\r\n  &::before {\r\n    transform: translateY(-3px) rotate(0);\r\n  }\r\n\r\n  &::after {\r\n    transform: translateY(3px) rotate(0);\r\n  }\r\n\r\n  ${({ isActive }) =>\r\n    isActive &&\r\n    css`\r\n      transform: rotate(135deg);\r\n\r\n      &::before {\r\n        transform: translateY(1px) rotate(90deg);\r\n      }\r\n\r\n      &::after {\r\n        transform: translateY(-1px) rotate(0);\r\n      }\r\n    `}\r\n`;\r\n\r\ntype BurgerProps = {\r\n  handleClick: () => void;\r\n  isVisible: boolean;\r\n};\r\n\r\nfunction Burger({ handleClick, isVisible }: BurgerProps) {\r\n  return (\r\n    <BurgerButton type=\"button\" onClick={handleClick}>\r\n      <BurgerBody isActive={isVisible} />\r\n    </BurgerButton>\r\n  );\r\n}\r\n\r\nexport default Burger;\r\n","export enum SessionEnum {\r\n  ACTION = 'ACTION',\r\n  REST = 'REST',\r\n}\r\n\r\nexport enum CycleEnum {\r\n  CUSTOM = 'CUSTOM',\r\n  DEFAULT = 'DEFAULT',\r\n}\r\n\r\nexport interface Action {\r\n  type: SessionEnum.ACTION;\r\n  time: number;\r\n}\r\n\r\nexport interface Rest {\r\n  type: SessionEnum.REST;\r\n  time: number;\r\n}\r\n\r\nexport type Session = [Action, Rest];\r\nexport type SessionTypes = SessionEnum.ACTION | SessionEnum.REST;\r\nexport type CycleTypes = CycleEnum.CUSTOM | CycleEnum.DEFAULT;\r\n\r\nexport interface CyclesState {\r\n  sessionPosition: number;\r\n  nextSessionPosition: number;\r\n  cyclePosition: number;\r\n  isRunning: boolean;\r\n  isSessionInProgress: boolean;\r\n  currentTime: number;\r\n  nextTime: number;\r\n  currentType: SessionTypes;\r\n  nextType: SessionTypes;\r\n  customCycle: Session[];\r\n  defaultCycle: Session[];\r\n}\r\n\r\nexport enum CyclesTypes {\r\n  ADD_TO_CYCLE = 'ADD_TO_CYCLE',\r\n  CLEAR_CYCLE = 'CLEAR_CYCLE',\r\n  SET_CURRENT_TIME = 'SET_CURRENT_TIME',\r\n  SET_CURRENT_TYPE = 'SET_CURRENT_TYPE',\r\n  TOGGLE_TIMER_RUNNING = 'TOGGLE_TIMER_RUNNING',\r\n  SET_CYCLE_POSITION = 'SET_CYCLE_POSITION',\r\n  CLEAR_AND_ADD_TO_CYCLE = 'CLEAR_AND_ADD_TO_CYCLE',\r\n  SET_SESSION_IN_PROGRESS = 'SET_SESSION_IN_PROGRESS',\r\n  SET_DEFAULT_CYCLE = 'SET_DEFAULT_CYCLE',\r\n  SET_SESSION_POSITION = 'SET_SESSION_POSITION',\r\n  SET_NEXT_SESSION_POSITION = 'SET_NEXT_SESSION_POSITION',\r\n  SET_NEXT_TIME = 'SET_NEXT_TIME',\r\n}\r\n\r\ninterface AddToCycleAction {\r\n  type: typeof CyclesTypes.ADD_TO_CYCLE;\r\n  payload: Session;\r\n}\r\n\r\ninterface ClearAndAddToCycleAction {\r\n  type: typeof CyclesTypes.CLEAR_AND_ADD_TO_CYCLE;\r\n  payload: Session;\r\n}\r\n\r\ninterface ClearCycleAction {\r\n  type: typeof CyclesTypes.CLEAR_CYCLE;\r\n}\r\n\r\ninterface SetCurrentTimeAction {\r\n  type: typeof CyclesTypes.SET_CURRENT_TIME;\r\n  payload: {\r\n    time: number;\r\n  };\r\n}\r\n\r\ninterface SetDefaultCycleAction {\r\n  type: typeof CyclesTypes.SET_DEFAULT_CYCLE;\r\n  payload: Session;\r\n}\r\n\r\ninterface SetCurrentTypeAction {\r\n  type: typeof CyclesTypes.SET_CURRENT_TYPE;\r\n  payload: {\r\n    type: SessionTypes;\r\n  };\r\n}\r\n\r\ninterface ToggleTimerRunningAction {\r\n  type: typeof CyclesTypes.TOGGLE_TIMER_RUNNING;\r\n  payload: {\r\n    isRunning: boolean;\r\n  };\r\n}\r\n\r\ninterface SetCyclePositionAction {\r\n  type: typeof CyclesTypes.SET_CYCLE_POSITION;\r\n  payload: {\r\n    position: number;\r\n  };\r\n}\r\n\r\ninterface SetSessionInProgressAction {\r\n  type: typeof CyclesTypes.SET_SESSION_IN_PROGRESS;\r\n  payload: {\r\n    isInProgress: boolean;\r\n  };\r\n}\r\n\r\ninterface SetSessionPositionAction {\r\n  type: typeof CyclesTypes.SET_SESSION_POSITION;\r\n  payload: {\r\n    position: number;\r\n  };\r\n}\r\n\r\ninterface SetNextSessionPositionAction {\r\n  type: typeof CyclesTypes.SET_NEXT_SESSION_POSITION;\r\n  payload: {\r\n    position: number;\r\n  };\r\n}\r\n\r\ninterface SetNextTimeAction {\r\n  type: typeof CyclesTypes.SET_NEXT_TIME;\r\n  payload: {\r\n    nextTime: number;\r\n  };\r\n}\r\n\r\nexport type CycleActionTypes =\r\n  | AddToCycleAction\r\n  | ClearAndAddToCycleAction\r\n  | ClearCycleAction\r\n  | SetCurrentTimeAction\r\n  | SetDefaultCycleAction\r\n  | SetCurrentTypeAction\r\n  | ToggleTimerRunningAction\r\n  | SetCyclePositionAction\r\n  | SetSessionInProgressAction\r\n  | SetSessionPositionAction\r\n  | SetNextSessionPositionAction\r\n  | SetNextTimeAction;\r\n","import { Session, CyclesTypes, SessionTypes } from './types';\r\n\r\nexport const addToCycle = (newSession: Session[]) => ({\r\n  type: CyclesTypes.ADD_TO_CYCLE,\r\n  payload: newSession,\r\n});\r\n\r\nexport const clearAndAddToCycle = (newSession: Session[]) => ({\r\n  type: CyclesTypes.CLEAR_AND_ADD_TO_CYCLE,\r\n  payload: newSession,\r\n});\r\n\r\nexport const clearCycle = () => ({\r\n  type: CyclesTypes.CLEAR_CYCLE,\r\n});\r\n\r\nexport const setCurrentTime = (time: number) => ({\r\n  type: CyclesTypes.SET_CURRENT_TIME,\r\n  payload: {\r\n    time,\r\n  },\r\n});\r\n\r\nexport const setDefaultCycle = (newSession: Session[]) => ({\r\n  type: CyclesTypes.SET_DEFAULT_CYCLE,\r\n  payload: newSession,\r\n});\r\n\r\nexport const setCurrentType = (type: SessionTypes) => ({\r\n  type: CyclesTypes.SET_CURRENT_TYPE,\r\n  payload: {\r\n    type,\r\n  },\r\n});\r\n\r\nexport const toggleTimerRunning = (isRunning: boolean) => ({\r\n  type: CyclesTypes.TOGGLE_TIMER_RUNNING,\r\n  payload: {\r\n    isRunning,\r\n  },\r\n});\r\n\r\nexport const setCyclePosition = (position: number) => ({\r\n  type: CyclesTypes.SET_CYCLE_POSITION,\r\n  payload: {\r\n    position,\r\n  },\r\n});\r\n\r\nexport const setSessionPosition = (position: number) => ({\r\n  type: CyclesTypes.SET_SESSION_POSITION,\r\n  payload: {\r\n    position,\r\n  },\r\n});\r\n\r\nexport const setNextSessionPosition = (position: number) => ({\r\n  type: CyclesTypes.SET_NEXT_SESSION_POSITION,\r\n  payload: {\r\n    position,\r\n  },\r\n});\r\n\r\nexport const setSessionInProgress = (isInProgress: boolean) => ({\r\n  type: CyclesTypes.SET_SESSION_IN_PROGRESS,\r\n  payload: {\r\n    isInProgress,\r\n  },\r\n});\r\n\r\nexport const setNextTime = (nextTime: number) => ({\r\n  type: CyclesTypes.SET_NEXT_TIME,\r\n  payload: {\r\n    nextTime,\r\n  },\r\n});\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button<{\r\n  asPrimary?: boolean;\r\n  asDelete?: boolean;\r\n  withMargin?: boolean;\r\n}>`\r\n  display: inline-block;\r\n  min-width: 220px;\r\n  padding: 18px 32px;\r\n  border: 1px solid ${({ theme }) => theme.colors.primary};\r\n  border-radius: 60px;\r\n  margin: ${({ withMargin }) => (withMargin ? '5px' : '5px 0')};\r\n  background: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-family: inherit;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  letter-spacing: 0.08em;\r\n  line-height: 1;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.35s;\r\n\r\n  @media (min-width: 960px) {\r\n    margin: ${({ withMargin }) => (withMargin ? '10px' : '10px 0')};\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colors.background};\r\n    background: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  ${({ asPrimary }) =>\r\n    asPrimary &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.colors.primary};\r\n      color: ${({ theme }) => theme.colors.background};\r\n    `}\r\n\r\n  ${({ asDelete }) =>\r\n    asDelete &&\r\n    css`\r\n      border-color: ${({ theme }) => theme.colors.error};\r\n      color: ${({ theme }) => theme.colors.error};\r\n\r\n      &:hover {\r\n        background-color: ${({ theme }) => theme.colors.error};\r\n        color: ${({ theme }) => theme.colors.copy};\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const activeClassName = 'active';\r\n\r\nconst NavLinkItem = styled(NavLink)`\r\n  display: block;\r\n  padding: 5px 10px;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  letter-spacing: 0.08em;\r\n  line-height: 2;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: all 0.35s;\r\n\r\n  @media (min-width: 420px) and (min-height: 600px) {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: 16px;\r\n    line-height: 1;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colors.secondary};\r\n  }\r\n\r\n  &.${activeClassName} {\r\n    color: ${({ theme }) => theme.colors.background60};\r\n  }\r\n`;\r\n\r\nexport default NavLinkItem;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { Routes } from 'routes';\r\nimport { clearCycle } from 'store/cycle/actions';\r\nimport { CyclesState } from 'store/cycle/types';\r\n\r\nimport Button from 'components/atoms/Button/Button';\r\nimport NavLinkItem from 'components/atoms/NavLinkItem/NavLinkItem';\r\n\r\nconst Wrapper = styled.div<{ isVisible?: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  transform: translateX(100%);\r\n  background: ${({ theme }) => theme.colors.background};\r\n  overflow-y: scroll;\r\n  transition: transform 0.35s;\r\n\r\n  ${({ isVisible }) =>\r\n    isVisible &&\r\n    css`\r\n      transform: translateX(0);\r\n    `}\r\n\r\n  @media (orientation: portrait) {\r\n    justify-content: center;\r\n  }\r\n\r\n  @media (orientation: landscape) and (min-height: 500px) {\r\n    justify-content: center;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    position: static;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    width: auto;\r\n    overflow-y: unset;\r\n    transform: translateX(0);\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: block;\r\n  padding: 60px 0;\r\n\r\n  @media (min-width: 1200px) {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  justify-content: cetner;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style-type: none;\r\n  transition: transform 0.35s ease-in-out;\r\n\r\n  @media (min-width: 1200px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  padding: 0;\r\n  margin: 0 20px;\r\n\r\n  @media (min-width: 1200px) {\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n\r\n  @media (min-width: 420px) and (min-height: 600px) {\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    min-width: auto;\r\n    margin-left: 12px;\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.2;\r\n  }\r\n`;\r\n\r\nconst StyleButtonMargin = styled(StyledButton)`\r\n  margin-right: 20px;\r\n  margin-left: 20px;\r\n\r\n  &:disabled {\r\n    opacity: 0.2;\r\n\r\n    &:hover {\r\n      background: none;\r\n      color: ${({ theme }) => theme.colors.error};\r\n    }\r\n  }\r\n`;\r\n\r\ninterface State {\r\n  cycle: CyclesState;\r\n}\r\n\r\nconst mapState = ({ cycle }: State) => ({\r\n  isRunning: cycle.isRunning,\r\n  sessionPosition: cycle.sessionPosition,\r\n});\r\n\r\nconst mapDispatch = {\r\n  clearCycle: () => clearCycle(),\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  asMobile?: boolean;\r\n  isVisible?: boolean;\r\n  onOpenModal: () => void;\r\n  handleClick: () => void;\r\n};\r\n\r\nfunction NavList({\r\n  isVisible,\r\n  isRunning,\r\n  sessionPosition,\r\n  onOpenModal,\r\n  handleClick,\r\n  clearCycle,\r\n}: Props) {\r\n  return (\r\n    <Wrapper isVisible={isVisible}>\r\n      <InnerWrapper>\r\n        <List>\r\n          <ListItem>\r\n            <NavLinkItem to={Routes.projects}>Projects</NavLinkItem>\r\n          </ListItem>\r\n          <ListItem>\r\n            <NavLinkItem to={Routes.history}>Pomodoro history</NavLinkItem>\r\n          </ListItem>\r\n          <ListItem>\r\n            <NavLinkItem to={Routes.settings}>Settings</NavLinkItem>\r\n          </ListItem>\r\n        </List>\r\n        <Buttons>\r\n          <StyleButtonMargin\r\n            asDelete\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleClick();\r\n              clearCycle();\r\n            }}\r\n            disabled={isRunning || sessionPosition === 1}\r\n          >\r\n            clear cycle\r\n          </StyleButtonMargin>\r\n          <StyledButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleClick();\r\n              onOpenModal();\r\n            }}\r\n            disabled={isRunning || sessionPosition === 1}\r\n          >\r\n            create cycle\r\n          </StyledButton>\r\n        </Buttons>\r\n      </InnerWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default connector(NavList);\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from 'context';\r\n\r\nimport Logo from 'components/atoms/Logo/Logo';\r\nimport Burger from 'components/atoms/Burger/Burger';\r\nimport NavList from 'components/molecules/NavList/NavList';\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nfunction Navigation() {\r\n  const { handleOpenModal } = useContext(AppContext);\r\n  const [isMenuVisible, toggleMenuVisibility] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isMenuVisible) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [isMenuVisible]);\r\n\r\n  useEffect(() => {\r\n    if (isMenuVisible) window.scrollTo(0, 0);\r\n  }, [isMenuVisible]);\r\n\r\n  const handleBurgerClick = () => {\r\n    toggleMenuVisibility((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Nav>\r\n        <Logo />\r\n        <Burger handleClick={handleBurgerClick} isVisible={isMenuVisible} />\r\n        <NavList\r\n          onOpenModal={handleOpenModal}\r\n          handleClick={handleBurgerClick}\r\n          isVisible={isMenuVisible}\r\n        />\r\n      </Nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Wrapper from 'components/atoms/Wrapper/Wrapper';\r\nimport Navigation from 'components/organisms/Navigation/Navigation';\r\n\r\nconst Main = styled.main<{ isSubPage?: boolean }>`\r\n  display: block;\r\n  margin: ${({ isSubPage }) => (isSubPage ? '60px auto 0' : '40px auto 0')};\r\n  max-width: 768px;\r\n\r\n  @media (min-width: 480px) {\r\n    margin: ${({ isSubPage }) => (isSubPage ? '80px auto 0' : '60px auto 0')};\r\n  }\r\n\r\n  @media (min-width: 500px) {\r\n    padding: 20px 30px;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    margin: ${({ isSubPage }) => (isSubPage ? '140px auto 0' : '40px auto 0')};\r\n  }\r\n`;\r\n\r\ntype PageTemplateProps = {\r\n  children: React.ReactNode;\r\n  isSubPage?: boolean;\r\n};\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children, isSubPage }) => (\r\n  <Wrapper>\r\n    <Navigation />\r\n    <Main isSubPage={isSubPage}>{children}</Main>\r\n  </Wrapper>\r\n);\r\n\r\nexport default PageTemplate;\r\n","import styled from 'styled-components';\r\n\r\nconst Time = styled.span`\r\n  display: inline-block;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  font-weight: inherit;\r\n`;\r\n\r\nexport default Time;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Time from 'components/atoms/Time/Time';\r\n\r\nconst TimerWrapper = styled.div<{ asMain?: boolean }>`\r\n  display: block;\r\n  color: ${({ theme, asMain }) =>\r\n    asMain ? theme.colors.primary : theme.colors.secondary};\r\n  font-size: ${({ asMain }) => (asMain ? '80px' : '20px')};\r\n  font-weight: ${({ asMain }) => (asMain ? '400' : '600')};\r\n  text-align: center;\r\n\r\n  @media (min-width: 600px) {\r\n    font-size: ${({ asMain }) => (asMain ? '100px' : '36px')};\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    font-size: ${({ asMain }) => (asMain ? '110px' : '40px')};\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: ${({ asMain }) => (asMain ? '140px' : '48px')};\r\n  }\r\n`;\r\n\r\ntype TimerProps = {\r\n  hours?: string;\r\n  minutes: string;\r\n  seconds: string;\r\n  asMain?: boolean;\r\n};\r\n\r\nconst Timer = ({ hours, minutes, seconds, asMain }: TimerProps) => (\r\n  <TimerWrapper asMain={asMain}>\r\n    {hours && (\r\n      <>\r\n        <Time>{hours}</Time>\r\n        <Time>:</Time>\r\n      </>\r\n    )}\r\n    <Time>{minutes}</Time>\r\n    <Time>:</Time>\r\n    <Time>{seconds}</Time>\r\n  </TimerWrapper>\r\n);\r\n\r\nexport default Timer;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst CycleItem = styled.span<{ fillDot?: boolean }>`\r\n  position: relative;\r\n  z-index: 1;\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: ${({ theme }) => theme.colors.background40};\r\n  transition: all 1s ease-in-out;\r\n\r\n  @media (min-width: 960px) {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 100%;\r\n    z-index: 0;\r\n    display: block;\r\n    width: 20px;\r\n    height: 1px;\r\n    transition: all 1s ease-in-out;\r\n\r\n    @media (min-width: 960px) {\r\n      width: 25px;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n      width: 30px;\r\n    }\r\n  }\r\n\r\n  ${({ fillDot }) =>\r\n    fillDot &&\r\n    css`\r\n      position: relative;\r\n      background: ${({ theme }) => theme.colors.secondary};\r\n      transition: all 1s ease-in-out;\r\n\r\n      &::before {\r\n        background: ${({ theme }) => theme.colors.secondary};\r\n        transition: all 2s ease-in-out;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default CycleItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CycleItem from 'components/atoms/CycleItem/CycleItem';\r\n\r\nconst StyledList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst StyledItem = styled.li`\r\n  padding: 0;\r\n  margin: 0 10px;\r\n\r\n  @media (min-width: 960px) {\r\n    margin: 0 12.5px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    margin: 0 14px;\r\n  }\r\n`;\r\n\r\ntype CycleProgressProps = {\r\n  cycle?: {\r\n    released: boolean;\r\n    key: number;\r\n  }[];\r\n};\r\n\r\nconst CycleProgress = ({ cycle }: CycleProgressProps) => (\r\n  <>\r\n    {cycle && (\r\n      <StyledList>\r\n        {cycle.map((item) => (\r\n          <StyledItem key={item.key}>\r\n            <CycleItem fillDot={item.released} />\r\n          </StyledItem>\r\n        ))}\r\n      </StyledList>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default CycleProgress;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Label = styled.label<{\r\n  asCopy?: boolean;\r\n  asMedium?: boolean;\r\n  asLarge?: boolean;\r\n}>`\r\n  position: relative;\r\n  display: block;\r\n  padding: 0;\r\n  margin: 7px 0;\r\n  color: ${({ theme, asCopy }) =>\r\n    asCopy ? theme.colors.copy : theme.colors.secondary};\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  line-height: 1;\r\n  letter-spacing: 0.2em;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 420px) {\r\n    margin: 18px 0;\r\n    font-size: 14px;\r\n  }\r\n\r\n  ${({ asMedium }) =>\r\n    asMedium &&\r\n    css`\r\n      font-size: 14px;\r\n\r\n      @media (min-width: 960px) {\r\n        font-size: 16px;\r\n      }\r\n    `}\r\n\r\n  ${({ asLarge }) =>\r\n    asLarge &&\r\n    css`\r\n      font-size: 18px;\r\n    `}\r\n`;\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Timer from 'components/molecules/Timer/Timer';\r\nimport CycleProgress from 'components/molecules/CycleProgress/CycleProgress';\r\nimport Label from 'components/atoms/Label/Label';\r\n\r\nconst Wraper = styled.div<{ asMain?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  ${({ asMain }) =>\r\n    asMain &&\r\n    css`\r\n      margin: 20px 0;\r\n\r\n      @media (min-width: 960px) {\r\n        margin: 30px 0;\r\n      }\r\n    `}\r\n`;\r\n\r\ninterface NextSession {\r\n  type: 'ACTION' | 'REST';\r\n  time: number;\r\n}\r\n\r\ntype TimerBox = {\r\n  isMain?: boolean;\r\n  isCycle?: boolean;\r\n  time?: number;\r\n  nextSession?: NextSession;\r\n  cycle?: { released: boolean; key: number }[];\r\n};\r\n\r\nconst TimerBox = ({\r\n  isMain,\r\n  isCycle,\r\n  time = 0,\r\n  nextSession,\r\n  cycle,\r\n}: TimerBox) => {\r\n  function getSeconds(ms: number): string {\r\n    const seconds = Math.floor((ms % 60000) / 1000);\r\n\r\n    return seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n  }\r\n\r\n  function getMinutes(ms: number): string {\r\n    const minutes = Math.floor(ms / 60 / 1000);\r\n\r\n    return minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isMain ? (\r\n        <Wraper asMain>\r\n          <Timer minutes={getMinutes(time)} seconds={getSeconds(time)} asMain />\r\n          {isCycle && <CycleProgress cycle={cycle} />}\r\n        </Wraper>\r\n      ) : (\r\n        <Wraper>\r\n          <Label as=\"span\" asCopy asMedium>\r\n            Next {nextSession?.type}\r\n          </Label>\r\n          <Timer\r\n            minutes={getMinutes(nextSession?.time || 0)}\r\n            seconds={getSeconds(nextSession?.time || 0)}\r\n          />\r\n        </Wraper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimerBox;\r\n","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from 'context';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { CyclesState } from 'store/cycle/types';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport TimerBox from 'components/molecules/TimerBox/TimerBox';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 960px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\ninterface RootState {\r\n  cycle: CyclesState;\r\n}\r\n\r\nconst mapState = ({ cycle }: RootState) => ({\r\n  nextSessionPosition: cycle.nextSessionPosition,\r\n  nextTime: cycle.nextTime,\r\n  currentTime: cycle.currentTime,\r\n  isRunning: cycle.isRunning,\r\n  customCycle: cycle.customCycle.map((_, index) => ({\r\n    released: index <= cycle.cyclePosition,\r\n    key: index,\r\n  })),\r\n});\r\n\r\nconst connector = connect(mapState);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nfunction TimerPanel({\r\n  currentTime,\r\n  isRunning,\r\n  customCycle,\r\n  nextSessionPosition,\r\n  nextTime,\r\n}: PropsFromRedux) {\r\n  const { onStartCountdow, onPauseCountdown, onStopCountdown } = useContext(\r\n    AppContext\r\n  );\r\n  const [isInitialView, setInitialView] = useState<boolean>(true);\r\n\r\n  const startClickHandler = () => {\r\n    onStartCountdow();\r\n    setInitialView(false);\r\n  };\r\n\r\n  const pauseClickHandler = () => {\r\n    onPauseCountdown();\r\n  };\r\n\r\n  const continueClickHandler = () => {\r\n    onStartCountdow();\r\n  };\r\n\r\n  const stopClickHandler = () => {\r\n    onStopCountdown();\r\n    setInitialView(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TimerBox\r\n        nextSession={{\r\n          type: nextSessionPosition === 0 ? 'ACTION' : 'REST',\r\n          time: nextTime,\r\n        }}\r\n      />\r\n      <TimerBox isMain isCycle time={currentTime} cycle={customCycle} />\r\n      <Wrapper>\r\n        {!isRunning && isInitialView ? (\r\n          <Button\r\n            asPrimary\r\n            withMargin\r\n            type=\"button\"\r\n            onClick={startClickHandler}\r\n          >\r\n            Start\r\n          </Button>\r\n        ) : isRunning ? (\r\n          <>\r\n            <Button\r\n              asPrimary\r\n              withMargin\r\n              type=\"button\"\r\n              onClick={stopClickHandler}\r\n            >\r\n              Stop\r\n            </Button>\r\n            <Button\r\n              asPrimary\r\n              withMargin\r\n              type=\"button\"\r\n              onClick={pauseClickHandler}\r\n            >\r\n              Pause\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              asPrimary\r\n              withMargin\r\n              type=\"button\"\r\n              onClick={stopClickHandler}\r\n            >\r\n              Stop\r\n            </Button>\r\n            <Button\r\n              asPrimary\r\n              withMargin\r\n              type=\"button\"\r\n              onClick={continueClickHandler}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connector(TimerPanel);\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst PageTitle = styled.h1<{ screenreaderOnly?: boolean }>`\r\n  color: ${({ theme }) => theme.colors.copy};\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  letter-spacing: 0.1em;\r\n\r\n  ${({ screenreaderOnly }) =>\r\n    screenreaderOnly &&\r\n    css`\r\n      position: absolute;\r\n      overflow: hidden;\r\n      width: 1px;\r\n      height: 1px;\r\n      padding: 0;\r\n      margin: -1px;\r\n      clip: rect(1px, 1px, 1px, 1px);\r\n      clip-path: inset(50%);\r\n    `}\r\n\r\n  @media(min-width:960px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nexport default PageTitle;\r\n","export interface Project {\r\n  id: string;\r\n  name: string;\r\n  sessionCount: number;\r\n}\r\n\r\nexport type ProjectsState = {\r\n  projectsList: Project[];\r\n  projectSelected: Project;\r\n};\r\n\r\nexport enum ProjectsTypes {\r\n  ADD_PROJECT = 'ADD_PROJECT',\r\n  REMOVE_PROJECT = 'REMOVE_PROJECT',\r\n  UPDATE_PROJECT = 'UPDATE_PROJECT',\r\n  SET_SELECTED_PROJECT = 'SET_SELECTED_PROJECT',\r\n}\r\n\r\nexport interface AddProjectAction {\r\n  type: typeof ProjectsTypes.ADD_PROJECT;\r\n  payload: Project;\r\n}\r\n\r\nexport interface RemoveProjectAction {\r\n  type: typeof ProjectsTypes.REMOVE_PROJECT;\r\n  payload: {\r\n    id: string;\r\n  };\r\n}\r\n\r\nexport interface UpdateProjectAction {\r\n  type: typeof ProjectsTypes.UPDATE_PROJECT;\r\n  payload: Project;\r\n}\r\n\r\nexport interface SetSelectedProjectAction {\r\n  type: typeof ProjectsTypes.SET_SELECTED_PROJECT;\r\n  payload: Project;\r\n}\r\n\r\nexport type ProjectsActionTypes =\r\n  | AddProjectAction\r\n  | RemoveProjectAction\r\n  | UpdateProjectAction\r\n  | SetSelectedProjectAction;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Input = styled.input<{ focusBackgorund?: boolean; asBox?: boolean }>`\r\n  width: 100%;\r\n  padding: 18px 0;\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  color: ${({ theme }) => theme.colors.copy};\r\n  background: none;\r\n  font-family: 'Exo 2', sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  transition: all 0.35s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 420px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media (min-width: 600px) {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 20px 0;\r\n    font-size: 22px;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 0;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\r\n\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  ${({ asBox }) =>\r\n    asBox &&\r\n    css`\r\n      padding: 10px;\r\n      /* border: 1px solid ${({ theme }) => theme.colors.secondary}; */\r\n      border: none;\r\n      border-radius: 100px;\r\n      background: ${({ theme }) => theme.colors.background};\r\n\r\n      &:focus {\r\n        border: none;\r\n        background: ${({ theme }) => theme.colors.background40};\r\n      }\r\n    `}\r\n  &[type=\"button\"] {\r\n    text-align: left;\r\n  }\r\n\r\n  &[type='number'] {\r\n    &::-webkit-inner-spin-button,\r\n    &::-webkit-outer-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  &[type='time'] {\r\n    margin: 8px 0 0 -10px;\r\n  }\r\n\r\n  &[type='time']::-webkit-datetime-edit-fields-wrapper {\r\n    display: flex;\r\n  }\r\n\r\n  &[type='time']::-webkit-datetime-edit-text {\r\n    padding: 19px 4px;\r\n  }\r\n\r\n  &[type='time']::-webkit-datetime-edit-hour-field,\r\n  &[type='time']::-webkit-datetime-edit-minute-field,\r\n  &[type='time']::-webkit-datetime-edit-second-field {\r\n    border-radius: 100px;\r\n    padding: 20px 10px;\r\n\r\n    &:focus {\r\n      background: ${({ focusBackgorund, theme }) =>\r\n        focusBackgorund ? theme.colors.background : theme.colors.background20};\r\n    }\r\n  }\r\n\r\n  &[type='time']::-webkit-clear-button,\r\n  &[type='time']::-webkit-inner-spin-button {\r\n    display: none;\r\n  }\r\n\r\n  &::placeholder {\r\n    opacity: 1;\r\n    color: ${({ theme }) => theme.colors.background60};\r\n    font-weight: 300;\r\n    transition: opacity 0.35s ease-in-out;\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst IconButton = styled.button<{\r\n  asAdd?: boolean;\r\n  asSubtract?: boolean;\r\n  asClose?: boolean;\r\n  asDelete?: boolean;\r\n  withBorder?: boolean;\r\n}>`\r\n  position: relative;\r\n  display: block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: ${({ theme, withBorder }) =>\r\n    withBorder ? `1px solid ${theme.colors.secondary}` : 'none'};\r\n  border-radius: 50%;\r\n  background: transparent;\r\n  transition: background 0.35s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.background20};\r\n\r\n    &::before,\r\n    &::after {\r\n      background: ${({ theme }) => theme.colors.primary};\r\n    }\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    display: block;\r\n    width: 14px;\r\n    height: 2px;\r\n    background: ${({ theme }) => theme.colors.secondary};\r\n    transition: background 0.35s ease-in-out;\r\n  }\r\n\r\n  &:disabled {\r\n    &::before,\r\n    &::after {\r\n      background: ${({ theme }) => theme.colors.background40};\r\n    }\r\n  }\r\n\r\n  ${({ asAdd }) =>\r\n    asAdd &&\r\n    css`\r\n      &::before {\r\n        transform: translate(-50%, -50%) rotate(0);\r\n      }\r\n\r\n      &::after {\r\n        transform: translate(-50%, -50%) rotate(90deg);\r\n      }\r\n    `}\r\n\r\n    ${({ asSubtract }) =>\r\n      asSubtract &&\r\n      css`\r\n        &::before {\r\n          transform: translate(-50%, -50%) rotate(0);\r\n        }\r\n\r\n        &::after {\r\n          opacity: 0;\r\n          visibility: hidden;\r\n        }\r\n      `}\r\n\r\n  ${({ asClose, asDelete }) =>\r\n    (asClose || asDelete) &&\r\n    css`\r\n      &::before {\r\n        transform: translate(-50%, -50%) rotate(45deg);\r\n      }\r\n\r\n      &::after {\r\n        transform: translate(-50%, -50%) rotate(-45deg);\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default IconButton;\r\n","import styled from 'styled-components';\r\n\r\nconst Count = styled.span`\r\n  display: block;\r\n  min-width: 40px;\r\n  height: 40px;\r\n  padding: 0 10px;\r\n  border-radius: 20px;\r\n  background: ${({ theme }) => theme.colors.background20};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  line-height: 40px;\r\n  letter-spacing: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Count;\r\n","import styled from 'styled-components';\r\n\r\nconst NoData = styled.span`\r\n  display: block;\r\n  margin-top: 40px;\r\n  text-align: left;\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme.colors.background40};\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.2em;\r\n\r\n  @media (orientation: landscape) {\r\n    text-align: center;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default NoData;\r\n","import React from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { Project } from 'store/projects/types';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { removeProject } from 'store/projects/actions';\r\nimport IconButton from 'components/atoms/IconButton/IconButton';\r\nimport Count from 'components/atoms/Count/Count';\r\nimport NoData from 'components/atoms/NoData/NoData';\r\n\r\nconst itemIn = keyframes`\r\n  0% {\r\n    transform: translateY(10px);\r\n  }\r\n\r\n  10% {\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  margin: 20px 0 0;\r\n  list-style: none;\r\n\r\n  @media (min-width: 960px) {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.li<{ noRemove?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${({ noRemove }) => (noRemove ? '0' : '20px 0')};\r\n  color: ${({ theme }) => theme.colors.copy};\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0;\r\n  animation: ${itemIn} 5s;\r\n\r\n  @media (min-width: 600px) {\r\n    font-size: 22px;\r\n    letter-spacing: 0.2em;\r\n  }\r\n\r\n  &:not(:first-of-type) {\r\n    border-top: 1px solid ${({ theme }) => theme.colors.background20};\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  border: none;\r\n  background: none;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  font-weight: inherit;\r\n  text-transform: inherit;\r\n  cursor: pointer;\r\n  transition: background 0.35s;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.background20};\r\n  }\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledCount = styled(Count)`\r\n  margin-right: 2px;\r\n\r\n  @media (min-width: 960px) {\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nconst mapDispatch = {\r\n  removeProject: (id: string) => removeProject(id),\r\n};\r\n\r\nconst connector = connect(null, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype ProjectListProps = PropsFromRedux & {\r\n  projects: Project[];\r\n  noRemove?: boolean;\r\n  getProject?: (project: Project) => void;\r\n};\r\n\r\nconst ProjectList = ({\r\n  projects,\r\n  removeProject,\r\n  noRemove,\r\n  getProject,\r\n}: ProjectListProps) => (\r\n  <List>\r\n    {!!projects.length ? (\r\n      projects.map((p) => (\r\n        <ListItem key={p.id} noRemove={noRemove}>\r\n          {noRemove ? (\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (getProject) getProject(p);\r\n              }}\r\n            >\r\n              <span>{p.name}</span>\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <span>{p.name}</span>\r\n              <ItemWrapper>\r\n                <StyledCount>{p.sessionCount}</StyledCount>\r\n                {!noRemove && (\r\n                  <IconButton\r\n                    type=\"button\"\r\n                    onClick={() => removeProject(p.id)}\r\n                    asDelete\r\n                  />\r\n                )}\r\n              </ItemWrapper>\r\n            </>\r\n          )}\r\n        </ListItem>\r\n      ))\r\n    ) : (\r\n      <NoData>No project yet</NoData>\r\n    )}\r\n  </List>\r\n);\r\n\r\nexport default connector(ProjectList);\r\n","import { Project, ProjectsActionTypes, ProjectsTypes } from './types';\r\n\r\nexport const addProject = (newProject: Project): ProjectsActionTypes => ({\r\n  type: ProjectsTypes.ADD_PROJECT,\r\n  payload: newProject,\r\n});\r\n\r\nexport const removeProject = (projectId: string): ProjectsActionTypes => ({\r\n  type: ProjectsTypes.REMOVE_PROJECT,\r\n  payload: {\r\n    id: projectId,\r\n  },\r\n});\r\n\r\nexport const updateProject = (\r\n  newProjectData: Project\r\n): ProjectsActionTypes => ({\r\n  type: ProjectsTypes.UPDATE_PROJECT,\r\n  payload: newProjectData,\r\n});\r\n\r\nexport const setSelectedProject = (project: Project): ProjectsActionTypes => ({\r\n  type: ProjectsTypes.SET_SELECTED_PROJECT,\r\n  payload: project,\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport { setSelectedProject } from 'store/projects/actions';\r\n\r\nimport Input from 'components/atoms/Input/Input';\r\nimport ProjectList from 'components/molecules/ProjectList/ProjectList';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 400px;\r\n  padding: 20px;\r\n  margin: 10px auto;\r\n\r\n  @media (min-height: 680px) {\r\n    margin: 40px auto;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    margin: 50px auto;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  display: block;\r\n`;\r\n\r\nconst Icon = styled.span<{ isActive: boolean }>`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0;\r\n  border: solid ${({ theme }) => theme.colors.secondary};\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  transform: translate(-50%, -50%) rotate(45deg);\r\n  padding: 3px;\r\n  transition: all 0.35s;\r\n\r\n  ${({ isActive }) =>\r\n    isActive &&\r\n    css`\r\n      transform: translate(-50%, -50%) rotate(225deg);\r\n    `}\r\n`;\r\n\r\ninterface State {\r\n  projects: ProjectsState;\r\n}\r\n\r\nfunction ProjectsDropDown() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isListVisible, toggleListVisibility] = useState<boolean>(false);\r\n  const projects = useSelector(({ projects }: State) => projects.projectsList);\r\n  const currentProject = useSelector(\r\n    ({ projects }: State) => projects.projectSelected\r\n  );\r\n\r\n  useEffect(() => {\r\n    toggleListVisibility(false);\r\n  }, [currentProject]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          type=\"button\"\r\n          value={currentProject?.name}\r\n          onClick={() => toggleListVisibility(!isListVisible)}\r\n        />\r\n        <Icon isActive={isListVisible} />\r\n      </InputWrapper>\r\n      {isListVisible && (\r\n        <ProjectList\r\n          projects={projects}\r\n          noRemove\r\n          getProject={(p) => dispatch(setSelectedProject(p))}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default ProjectsDropDown;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CyclesState } from 'store/cycle/types';\r\nimport PageTemplate from 'templates/PageTemplate';\r\nimport TimerPanel from 'components/organisms/TimerPanel/TimerPanel';\r\nimport PageTitle from 'components/atoms/PageTitle/PageTitle';\r\nimport ProjectsDropDown from 'components/molecules/ProjectsDropDown/ProjectsDropDown';\r\n\r\ninterface State {\r\n  cycle: CyclesState;\r\n}\r\n\r\nfunction TimerView() {\r\n  const sessionPosition = useSelector(\r\n    ({ cycle }: State) => cycle.sessionPosition\r\n  );\r\n  return (\r\n    <PageTemplate>\r\n      <PageTitle screenreaderOnly>Timer</PageTitle>\r\n      <TimerPanel />\r\n      {sessionPosition === 0 && <ProjectsDropDown />}\r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default TimerView;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *, *::before, *::after {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    *:focus {\r\n        outline: 1;\r\n        outline-color: ${({ theme }) => theme.colors.background40};\r\n    }\r\n\r\n\r\n    body {\r\n        padding: 0;\r\n        margin: 0;\r\n        overflow-y: scroll;\r\n        background: ${({ theme }) => theme.colors.background};\r\n        font-family: 'Exo 2', sans-serif;\r\n    }\r\n    \r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n\r\n        @media(min-width:960px) {\r\n            width: 10px;\r\n        }\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background: ${({ theme }) => theme.colors.background20};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: ${({ theme }) => theme.colors.secondary};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: ${({ theme }) => theme.colors.primary};\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export enum ThemeColorTypes {\r\n  DARK = 'DARK',\r\n  LIGHT = 'LIGHT',\r\n}\r\n\r\nexport type ThemeColor = ThemeColorTypes.DARK | ThemeColorTypes.LIGHT;\r\n\r\nexport interface SettingsState {\r\n  colorTheme: ThemeColor;\r\n}\r\n\r\nexport enum SettingsTypes {\r\n  SET_THEME_COLOR = 'SET_THEME_COLOR',\r\n}\r\n\r\nexport interface SetThemeColorAction {\r\n  type: typeof SettingsTypes.SET_THEME_COLOR;\r\n  payload: {\r\n    option: ThemeColor;\r\n  };\r\n}\r\n\r\nexport type SettingsActionTypes = SetThemeColorAction;\r\n","import React, { ReactNode } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyle from '../theme/GlobalStyle';\r\nimport { themeDark, themeLight } from '../theme/mainTheme';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThemeColor, ThemeColorTypes } from 'store/settings/types';\r\n\r\nexport enum ThemeOptions {\r\n  DARK = 'DARK',\r\n  LIGHT = 'LIGHT',\r\n}\r\n\r\ntype MainTemplateProps = {\r\n  children: ReactNode;\r\n};\r\n\r\ninterface RootState {\r\n  settings: {\r\n    colorTheme: ThemeColor;\r\n  };\r\n}\r\n\r\nfunction MainTemplate({ children }: MainTemplateProps) {\r\n  const getThemeColor = (state: RootState) => state.settings.colorTheme;\r\n  const themeColor = useSelector(getThemeColor);\r\n\r\n  return (\r\n    <ThemeProvider\r\n      theme={themeColor === ThemeColorTypes.DARK ? themeDark : themeLight}\r\n    >\r\n      <GlobalStyle />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default MainTemplate;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const themeDark: DefaultTheme = {\r\n  colors: {\r\n    background: '#192532',\r\n    background20: '#1E2A37',\r\n    background40: '#343943',\r\n    background60: '#424550',\r\n    primary: '#E8C7C8',\r\n    secondary: '#9E8588',\r\n    error: '#F16B8A',\r\n    copy: '#ffffff',\r\n  },\r\n};\r\n\r\nexport const themeLight: DefaultTheme = {\r\n  colors: {\r\n    background: '#ffffff',\r\n    background20: '#E7E8EA',\r\n    background40: '#D1D3D6',\r\n    background60: '#B9BDC1',\r\n    primary: '#192532',\r\n    secondary: '#192532',\r\n    error: '#F16B8A',\r\n    copy: '#192532',\r\n  },\r\n};\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useInterval = (\r\n  callback: () => void,\r\n  delay: number,\r\n  isTimerOnInitial: boolean\r\n) => {\r\n  const [isTimerOn, toggleTimer] = useState<boolean>(isTimerOnInitial);\r\n  const savedCallback = useRef<() => void>(() => {});\r\n  const intervalId = useRef<number>(0);\r\n\r\n  const start = () => toggleTimer(true);\r\n  const stop = () => toggleTimer(false);\r\n  const clear = (id: number) => clearInterval(id);\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (!isTimerOn) return;\r\n\r\n    const tick = () => {\r\n      savedCallback.current();\r\n    };\r\n\r\n    intervalId.current = setInterval(tick, delay);\r\n    return () => clearInterval(intervalId.current);\r\n  }, [delay, isTimerOn]);\r\n\r\n  return [() => start(), () => stop(), () => clear(intervalId.current)];\r\n};\r\n","export function getMinutes(\r\n  ms: number,\r\n  numberReturn?: boolean\r\n): string | number {\r\n  const minutes = Math.floor(ms / 60 / 1000);\r\n\r\n  if (numberReturn) return Number(minutes);\r\n\r\n  return minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n}\r\n\r\nexport function getSeconds(\r\n  ms: number,\r\n  numberReturn?: boolean\r\n): string | number {\r\n  const seconds = Math.floor((ms % 60000) / 1000);\r\n\r\n  if (numberReturn) return Number(seconds);\r\n\r\n  return seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n}\r\n\r\nexport function generateUnicId(ids: string[]) {\r\n  let id: string;\r\n\r\n  do {\r\n    id = String(Math.floor(Math.random() * 10 ** 20));\r\n  } while (ids.includes(id));\r\n\r\n  return id;\r\n}\r\n\r\nexport const getFormat = (date: Date): string => {\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n\r\n  return `${year}-${month < 10 ? `0${month}` : month}-${\r\n    day < 10 ? `0${day}` : day\r\n  }`;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst Close = styled.button`\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: block;\r\n  width: 28px;\r\n  height: 28px;\r\n  border: none;\r\n  margin: 0 0 0 auto;\r\n  background: none;\r\n  transition: background 0.35s ease-in-out;\r\n\r\n  &:hover {\r\n    &::before,\r\n    &::after {\r\n      background: ${({ theme }) => theme.colors.secondary};\r\n    }\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    display: block;\r\n    width: 14px;\r\n    height: 2px;\r\n    background: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  &::before {\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n  }\r\n\r\n  &::after {\r\n    transform: translate(-50%, -50%) rotate(-45deg);\r\n  }\r\n`;\r\n\r\nexport default Close;\r\n","import styled from 'styled-components';\r\n\r\nconst Headline = styled.h1<{ customWidth?: string }>`\r\n  display: block;\r\n  padding: 0;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.copy};\r\n  font-size: ${({ customWidth, theme }) => customWidth || '20px'};\r\n  font-weight: 400;\r\n  letter-spacing: 0.08em;\r\n  line-height: 1.5;\r\n\r\n  @media (min-width: 960px) {\r\n    font-size: ${({ customWidth, theme }) => customWidth || '26px'};\r\n  }\r\n`;\r\n\r\nexport default Headline;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Label from 'components/atoms/Label/Label';\r\n\r\nconst Input = styled.input`\r\n  position: absolute;\r\n  width: 0;\r\n  height: 0;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  transition: all 0.35s ease-in-out;\r\n`;\r\n\r\nconst Checkmark = styled.span<{ type?: string }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 15px;\r\n  height: 15px;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  transition: all 0.35s ease-in-out;\r\n\r\n  ${({ type }) =>\r\n    type === 'radio' &&\r\n    css`\r\n      border-radius: 50%;\r\n    `}\r\n`;\r\n\r\nconst StyledLabel = styled(Label)<{ marginTop?: string }>`\r\n  padding-left: 25px;\r\n  margin: 18px 0;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  transition: all .35s ease-in-out;\r\n  margin-top: ${({ marginTop }) => marginTop || '0'};\r\n\r\n  ${Input}:checked ~ ${Checkmark} {\r\n    background: ${({ theme }) => theme.colors.secondary};\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n\r\n    ${Checkmark} {\r\n        background: ${({ theme }) => theme.colors.primary};\r\n    }\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  label: string;\r\n  type: 'radio' | 'checkbox';\r\n  name: string;\r\n  onChange: () => void;\r\n  checked?: boolean;\r\n  id: string;\r\n  marginTop?: string;\r\n};\r\n\r\nconst RadioCheck = ({\r\n  id,\r\n  label,\r\n  type,\r\n  name,\r\n  onChange,\r\n  checked,\r\n  marginTop,\r\n}: Props) => (\r\n  <StyledLabel marginTop={marginTop}>\r\n    {label}\r\n    <Input\r\n      id={id}\r\n      type={type}\r\n      name={name}\r\n      onChange={onChange}\r\n      checked={checked}\r\n    />\r\n    <Checkmark type={type} />\r\n  </StyledLabel>\r\n);\r\n\r\nexport default RadioCheck;\r\n","import React, { ChangeEvent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Label from 'components/atoms/Label/Label';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport IconButton from 'components/atoms/IconButton/IconButton';\r\n\r\nconst StyledLabel = styled(Label)`\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  transition: all 0.35s ease-in-out;\r\n\r\n  &:focus-within {\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 12px;\r\n`;\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin: 0 40px;\r\n  text-align: center;\r\n`;\r\n\r\ninterface Props {\r\n  label: string;\r\n  onChange: (value: number) => void;\r\n  value: string;\r\n  maxValue: number;\r\n}\r\n\r\nfunction NumberInputBox({ label, onChange, value, maxValue }: Props) {\r\n  function handleChange(e: ChangeEvent<HTMLInputElement>) {\r\n    const eventValue = Number(e.currentTarget.value);\r\n\r\n    const currentValue =\r\n      eventValue < 0 ? 0 : eventValue > maxValue ? maxValue : eventValue;\r\n\r\n    onChange(currentValue);\r\n  }\r\n\r\n  function onIncrease() {\r\n    const prevValue = Number(value);\r\n    const currentValue = prevValue + 1 > maxValue ? maxValue : prevValue + 1;\r\n\r\n    onChange(currentValue);\r\n  }\r\n\r\n  function onDecrease() {\r\n    const prevValue = Number(value);\r\n    const currentValue = prevValue - 1 < 0 ? 0 : prevValue - 1;\r\n\r\n    onChange(currentValue);\r\n  }\r\n\r\n  return (\r\n    <StyledLabel>\r\n      {label}\r\n      <BoxWrapper>\r\n        <StyledIconButton\r\n          type=\"button\"\r\n          asSubtract\r\n          withBorder\r\n          onClick={onDecrease}\r\n        />\r\n        <StyledInput\r\n          asBox\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n        <StyledIconButton type=\"button\" asAdd withBorder onClick={onIncrease} />\r\n      </BoxWrapper>\r\n    </StyledLabel>\r\n  );\r\n}\r\n\r\nexport default NumberInputBox;\r\n","import React, { ChangeEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getSeconds, getMinutes } from 'utils';\r\n\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Label from 'components/atoms/Label/Label';\r\n\r\nconst StyledLabel = styled(Label)`\r\n  width: 100%;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  transition: all 0.35s ease-in-out;\r\n\r\n  &:focus-within {\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 12px;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  max-width: 60px;\r\n  text-align: center;\r\n`;\r\n\r\nconst InputBreak = styled.span`\r\n  width: 20px;\r\n  line-height: 1;\r\n  color: ${({ theme }) => theme.colors.copy};\r\n  text-align: center;\r\n`;\r\n\r\ninterface Props {\r\n  label: string;\r\n  onChange: (values: number) => void;\r\n  maxValue: number;\r\n  value: number;\r\n}\r\n\r\nfunction TimeInputBox({ label, onChange, maxValue, value }: Props) {\r\n  function convertToMilliseconds(valuesData: number[]): number {\r\n    const [minutes, seconds] = valuesData;\r\n\r\n    const minutesInMiliseconds = minutes * 60 * 1000;\r\n    const secondsInMiliseconds = seconds * 1000;\r\n\r\n    return minutesInMiliseconds + secondsInMiliseconds;\r\n  }\r\n\r\n  function handleMinutesChange(e: ChangeEvent<HTMLInputElement>) {\r\n    const eValue = Number(e.currentTarget.value);\r\n\r\n    const min = eValue < 0 ? 0 : eValue > maxValue ? maxValue : eValue;\r\n    const sec = Number(min === maxValue ? 0 : getSeconds(value, true));\r\n\r\n    onChange(convertToMilliseconds([min, sec]));\r\n  }\r\n\r\n  function handleSecondsChange(e: ChangeEvent<HTMLInputElement>) {\r\n    const eValue = Number(e.currentTarget.value);\r\n\r\n    const min = Number(getMinutes(value, true));\r\n    const sec = eValue < 0 || eValue >= maxValue || min >= 60 ? 0 : eValue;\r\n\r\n    onChange(convertToMilliseconds([min, sec]));\r\n  }\r\n\r\n  return (\r\n    <StyledLabel>\r\n      {label}\r\n      <BoxWrapper>\r\n        <StyledInput\r\n          asBox\r\n          type=\"number\"\r\n          value={getMinutes(value)}\r\n          name=\"minutes\"\r\n          onChange={handleMinutesChange}\r\n        />\r\n        <InputBreak>:</InputBreak>\r\n        <StyledInput\r\n          asBox\r\n          type=\"number\"\r\n          value={getSeconds(value)}\r\n          name=\"seconds\"\r\n          onChange={handleSecondsChange}\r\n        />\r\n      </BoxWrapper>\r\n    </StyledLabel>\r\n  );\r\n}\r\n\r\nexport default TimeInputBox;\r\n","import React, { useState, FormEvent } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\nimport { SessionEnum, Session } from 'store/cycle/types';\r\nimport { addToCycle, clearAndAddToCycle } from 'store/cycle/actions';\r\nimport { generateUnicId } from 'utils';\r\n\r\nimport Close from 'components/atoms/Close/Close';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport Headline from 'components/atoms/Headline/Headline';\r\nimport IconButton from 'components/atoms/IconButton/IconButton';\r\n\r\nimport RadioCheck from 'components/molecules/RadioCheck/RadioCheck';\r\nimport NumberInputBox from 'components/molecules/NumberInputBox/NumberInputBox';\r\nimport TimeInputBox from 'components/molecules/TimeInputBox/TimeInputBox';\r\n\r\nconst scale = keyframes`\r\n  from {\r\n    transform: translate(-50%, -50%) scale(0);\r\n  }\r\n\r\n  to {\r\n    transform: translate(-50%, -50%) scale(1);\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  z-index: 200;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst BoxModal = styled.div`\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 50%;\r\n  left: 50%;\r\n  overflow-y: scroll;\r\n  width: calc(100% - 40px);\r\n  max-width: 800px;\r\n  height: calc(100vh - 40px);\r\n  max-height: 600px;\r\n\r\n  transform: translate(-50%, -50%) scale(0);\r\n  background: ${({ theme }) => theme.colors.background20};\r\n  box-shadow: 5px 2px 10px 0px rgba(24, 27, 30, 0.3);\r\n  animation: ${scale} 0.4s forwards;\r\n`;\r\n\r\nconst BoxModalWrapper = styled.div`\r\n  padding: 10px 30px;\r\n\r\n  @media (min-width: 600px) {\r\n    padding: 20px 50px;\r\n  }\r\n\r\n  @media (min-width: 840px) {\r\n    padding: 30px 70px;\r\n  }\r\n`;\r\n\r\nconst RadioForm = styled.form`\r\n  display: block;\r\n  margin-top: 20px;\r\n\r\n  @media (min-width: 600px) {\r\n    display: flex;\r\n\r\n    > label {\r\n      &:not(:last-of-type) {\r\n        margin-right: 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TimerWrapper = styled.div`\r\n  > label {\r\n    margin: 30px 0;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    display: flex;\r\n\r\n    > label {\r\n      &:first-child {\r\n        margin-right: 20px;\r\n      }\r\n\r\n      &:last-child {\r\n        margin-left: 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  display: block;\r\n  margin: 30px auto;\r\n\r\n  @media (min-width: 960px) {\r\n    margin: 60px 0 0 auto;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-top: 60px;\r\n`;\r\n\r\nconst SesionNumber = styled.span`\r\n  display: block;\r\n  width: 100px;\r\n  font-size: 40px;\r\n  line-height: 1;\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`;\r\n\r\ninterface State {\r\n  cycle: {\r\n    customCycle: Session[];\r\n  };\r\n}\r\n\r\ninterface CycleModal {\r\n  onClose: () => void;\r\n}\r\n\r\ninterface SameValue {\r\n  sessionNumber: number;\r\n  sessionTime: number;\r\n  restTime: number;\r\n}\r\n\r\nconst sameData = {\r\n  sessionNumber: 0,\r\n  sessionTime: 0,\r\n  restTime: 0,\r\n};\r\n\r\ninterface CustomValue {\r\n  id: string;\r\n  sessionTime: number;\r\n  restTime: number;\r\n}\r\n\r\nconst customData = {\r\n  id: generateUnicId([]),\r\n  sessionTime: 0,\r\n  restTime: 0,\r\n};\r\n\r\nfunction CycleModal({ onClose }: CycleModal) {\r\n  const customCycle = useSelector(({ cycle }: State) => cycle.customCycle);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isClearChecked, toggleClearChecked] = useState<boolean>(false);\r\n  const [isSameSession, toggleSession] = useState<boolean>(true);\r\n  const [sameValues, setSameValues] = useState<SameValue>(sameData);\r\n  const [customValues, setCustomValues] = useState<CustomValue[]>([customData]);\r\n\r\n  const modalRef = useClickOutside(onClose);\r\n\r\n  const getSameValue = (state: SameValue, value: number, name: string) => ({\r\n    ...state,\r\n    [name]: value,\r\n  });\r\n\r\n  const getCustomValue = (\r\n    state: CustomValue[],\r\n    value: number,\r\n    id: string,\r\n    type: string\r\n  ) => state.map((i) => (i.id === id ? { ...i, [type]: value } : i));\r\n\r\n  function addNewCustomSession() {\r\n    if (customValues.length < 5) {\r\n      const unicId = generateUnicId(customValues.map((el) => el.id));\r\n\r\n      setCustomValues([\r\n        ...customValues,\r\n        {\r\n          id: String(unicId),\r\n          sessionTime: 0,\r\n          restTime: 0,\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    let output: Session[] | [] = [];\r\n\r\n    if (isSameSession) {\r\n      if (\r\n        sameValues.sessionNumber <= 0 ||\r\n        sameValues.sessionTime <= 0 ||\r\n        sameValues.restTime <= 0\r\n      )\r\n        return;\r\n\r\n      output = Array(sameValues.sessionNumber).fill([\r\n        { type: SessionEnum.ACTION, time: sameValues.sessionTime },\r\n        { type: SessionEnum.REST, time: sameValues.restTime },\r\n      ]);\r\n    } else {\r\n      if (customValues.some((i) => i.sessionTime === 0 || i.restTime === 0))\r\n        return;\r\n\r\n      output = customValues.map((item) => [\r\n        { type: SessionEnum.ACTION, time: item.sessionTime },\r\n        { type: SessionEnum.REST, time: item.restTime },\r\n      ]);\r\n    }\r\n\r\n    if (isClearChecked) {\r\n      dispatch(clearAndAddToCycle(output));\r\n    } else {\r\n      dispatch(addToCycle(output));\r\n    }\r\n\r\n    setSameValues(sameData);\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BoxModal ref={modalRef}>\r\n        <Close onClick={onClose} />\r\n        <BoxModalWrapper>\r\n          <Headline>Create Cycle</Headline>\r\n          <RadioForm>\r\n            <RadioCheck\r\n              label=\"Same session\"\r\n              id=\"sameSession\"\r\n              type=\"radio\"\r\n              name=\"sessionKind\"\r\n              checked={isSameSession}\r\n              onChange={() => toggleSession(!isSameSession)}\r\n            />\r\n            <RadioCheck\r\n              label=\"Custom session\"\r\n              id=\"customSession\"\r\n              type=\"radio\"\r\n              name=\"sessionKind\"\r\n              checked={!isSameSession}\r\n              onChange={() => toggleSession(!isSameSession)}\r\n            />\r\n          </RadioForm>\r\n\r\n          <Form onSubmit={handleSubmit}>\r\n            {isSameSession ? (\r\n              <>\r\n                <NumberInputBox\r\n                  label=\"session number\"\r\n                  onChange={(value: number) =>\r\n                    setSameValues(\r\n                      getSameValue(sameValues, value, 'sessionNumber')\r\n                    )\r\n                  }\r\n                  maxValue={5}\r\n                  value={String(sameValues.sessionNumber)}\r\n                />\r\n                <TimerWrapper>\r\n                  <TimeInputBox\r\n                    label=\"session time\"\r\n                    onChange={(value: number) =>\r\n                      setSameValues(\r\n                        getSameValue(sameValues, value, 'sessionTime')\r\n                      )\r\n                    }\r\n                    maxValue={60}\r\n                    value={sameValues.sessionTime}\r\n                  />\r\n                  <TimeInputBox\r\n                    label=\"rest time\"\r\n                    onChange={(value: number) =>\r\n                      setSameValues(getSameValue(sameValues, value, 'restTime'))\r\n                    }\r\n                    maxValue={60}\r\n                    value={sameValues.restTime}\r\n                  />\r\n                </TimerWrapper>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {customValues.map((item, index) => (\r\n                  <TimerWrapper key={item.id}>\r\n                    <SesionNumber>{index + 1}</SesionNumber>\r\n                    <TimeInputBox\r\n                      label=\"session time\"\r\n                      onChange={(value: number) =>\r\n                        setCustomValues(\r\n                          getCustomValue(\r\n                            customValues,\r\n                            value,\r\n                            item.id,\r\n                            'sessionTime'\r\n                          )\r\n                        )\r\n                      }\r\n                      maxValue={60}\r\n                      value={Number(\r\n                        customValues.find((el) => el.id === item.id)\r\n                          ?.sessionTime\r\n                      )}\r\n                    />\r\n                    <TimeInputBox\r\n                      label=\"break time\"\r\n                      onChange={(value: number) =>\r\n                        setCustomValues(\r\n                          getCustomValue(\r\n                            customValues,\r\n                            value,\r\n                            item.id,\r\n                            'restTime'\r\n                          )\r\n                        )\r\n                      }\r\n                      maxValue={60}\r\n                      value={Number(\r\n                        customValues.find((el) => el.id === item.id)?.restTime\r\n                      )}\r\n                    />\r\n                    {/* <IconButton\r\n                    type=\"button\"\r\n                    asDelete\r\n                    onClick={() => {\r\n                      setCustomValues(\r\n                        customValues.filter((s) => s.id !== item.id)\r\n                      );\r\n                    }}\r\n                  /> */}\r\n                  </TimerWrapper>\r\n                ))}\r\n                <IconButton\r\n                  type=\"button\"\r\n                  asAdd\r\n                  onClick={addNewCustomSession}\r\n                  disabled={customValues.length >= 5}\r\n                />\r\n              </>\r\n            )}\r\n\r\n            {!!customCycle.length && (\r\n              <RadioCheck\r\n                label=\"Clear existing custom cycle\"\r\n                type=\"checkbox\"\r\n                name=\"clearCycle\"\r\n                onChange={() => toggleClearChecked(!isClearChecked)}\r\n                id=\"string\"\r\n                checked={isClearChecked}\r\n                marginTop=\"40px\"\r\n              />\r\n            )}\r\n\r\n            <StyledButton type=\"submit\">Create Cycle</StyledButton>\r\n          </Form>\r\n        </BoxModalWrapper>\r\n      </BoxModal>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CycleModal;\r\n","import { useEffect, useCallback, useRef } from 'react';\r\n\r\nexport function useClickOutside(callback: () => void) {\r\n  const ref = useRef(null);\r\n\r\n  function handleClick(event: MouseEvent) {\r\n    if (!(ref.current! as any).contains(event.target)) callback();\r\n  }\r\n\r\n  const handleClickCallback = useCallback(handleClick, [callback, ref]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickCallback);\r\n\r\n    return () => document.removeEventListener('click', handleClickCallback);\r\n  }, [handleClickCallback]);\r\n\r\n  return ref;\r\n}\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst FormError = styled.span<{ asCommunicat?: boolean }>`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  display: block;\r\n  margin: 10px 0;\r\n  color: ${({ theme }) => theme.colors.error};\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.1em;\r\n  text-transform: none;\r\n\r\n  @media (min-width: 960px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  ${({ asCommunicat }) =>\r\n    asCommunicat &&\r\n    css`\r\n      color: ${({ theme }) => theme.colors.secondary};\r\n    `}\r\n`;\r\n\r\nexport default FormError;\r\n","import React, { useState, useEffect, ChangeEvent, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport { addProject } from 'store/projects/actions';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Label from 'components/atoms/Label/Label';\r\nimport IconButton from 'components/atoms/IconButton/IconButton';\r\nimport FormError from 'components/atoms/FormError/FormError';\r\nimport { generateUnicId } from 'utils';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledLabel = styled(Label)`\r\n  width: 100%;\r\n  margin-right: 20px;\r\n\r\n  @media (min-width: 960px) {\r\n    margin-right: 40px;\r\n  }\r\n`;\r\n\r\ninterface RootState {\r\n  projects: ProjectsState;\r\n}\r\n\r\nfunction AddProject() {\r\n  const dispatch = useDispatch();\r\n\r\n  const getProjects = ({ projects }: RootState) => projects.projectsList;\r\n  const projects = useSelector(getProjects);\r\n\r\n  const [newProjectValue, setNewProjectValue] = useState<string>('');\r\n  const [isTooLong, toggleLongStatus] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const isTheSameNameExist = (name: string) =>\r\n    projects.map((p) => p.name).includes(name);\r\n\r\n  const isTheSameNameExistCallback = useCallback(isTheSameNameExist, [\r\n    projects,\r\n  ]);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.currentTarget.value;\r\n\r\n    if (value.length >= 21) {\r\n      toggleLongStatus(true);\r\n      setNewProjectValue(value);\r\n      return;\r\n    }\r\n\r\n    toggleLongStatus(false);\r\n    setNewProjectValue(value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (isTheSameNameExist(newProjectValue)) {\r\n      setError('The same project exist. Enter another name.');\r\n      return;\r\n    }\r\n\r\n    if (isTooLong || !newProjectValue) return;\r\n\r\n    dispatch(\r\n      addProject({\r\n        id: generateUnicId(projects.map((i) => i.id)),\r\n        name: newProjectValue,\r\n        sessionCount: 0,\r\n      })\r\n    );\r\n\r\n    toggleLongStatus(false);\r\n    setNewProjectValue('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!error && !isTheSameNameExistCallback(newProjectValue)) setError('');\r\n  }, [error, isTheSameNameExistCallback, newProjectValue]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <StyledLabel>\r\n        Add new project\r\n        <Input\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={newProjectValue}\r\n          placeholder=\"Type new project name\"\r\n        />\r\n        {!!error && <FormError>{error}</FormError>}\r\n        {!!isTooLong && (\r\n          <FormError asCommunicat>That's enough characters :)</FormError>\r\n        )}\r\n      </StyledLabel>\r\n      <IconButton asAdd type=\"submit\" />\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AddProject;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport PageTemplate from 'templates/PageTemplate';\r\nimport PageTitle from 'components/atoms/PageTitle/PageTitle';\r\nimport AddProject from 'components/molecules/AddProject/AddProject';\r\nimport ProjectList from 'components/molecules/ProjectList/ProjectList';\r\n\r\ninterface RootState {\r\n  projects: ProjectsState;\r\n}\r\n\r\nfunction ProjectsPage() {\r\n  const projects = useSelector(\r\n    ({ projects }: RootState) => projects.projectsList\r\n  );\r\n\r\n  return (\r\n    <PageTemplate isSubPage>\r\n      <PageTitle>Projects</PageTitle>\r\n      <AddProject />\r\n      <ProjectList projects={projects} />\r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport RadioCheck from 'components/molecules/RadioCheck/RadioCheck';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n\r\n  > label:first-of-type {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\ninterface SignleInput {\r\n  id: string;\r\n  label: string;\r\n  type: 'radio' | 'checkbox';\r\n  name: string;\r\n  onChange: () => void;\r\n  checked: boolean;\r\n}\r\n\r\ninterface Props {\r\n  inputs: SignleInput[];\r\n}\r\n\r\nconst RadioForm = ({ inputs }: Props) => (\r\n  <Form>\r\n    {inputs.map((i) => (\r\n      <RadioCheck\r\n        key={i.id}\r\n        id={i.id}\r\n        label={i.label}\r\n        type={i.type}\r\n        name={i.name}\r\n        onChange={i.onChange}\r\n        checked={i.checked}\r\n      />\r\n    ))}\r\n  </Form>\r\n);\r\n\r\nexport default RadioForm;\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport default List;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Arrow = styled.span<{ isActive: boolean }>`\r\n  border: solid ${({ theme }) => theme.colors.secondary};\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  transform: translate(-50%, -50%) rotate(45deg);\r\n  padding: 3px;\r\n  margin-left: 20px;\r\n  transition: all 0.35s;\r\n  transform-origin: center center;\r\n\r\n  ${({ isActive }) =>\r\n    isActive &&\r\n    css`\r\n      transform: rotate(225deg);\r\n    `}\r\n`;\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Arrow from 'components/atoms/Arrow/Arrow';\r\nimport Headline from 'components/atoms/Headline/Headline';\r\nimport Count from 'components/atoms/Count/Count';\r\n\r\nconst StyledHeadline = styled(Headline)`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n\r\n  @media (min-width: 960px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledArrow = styled(Arrow)`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst StyledCount = styled(Count)`\r\n  display: inline-block;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  margin: 0 -10px;\r\n  width: 100%;\r\n  background: none;\r\n  color: inherit;\r\n  font-weight: inherit;\r\n  font-size: 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background 0.35s;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.background20};\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  title: string;\r\n  count: number;\r\n  onClick: () => void;\r\n  listOpen: boolean;\r\n}\r\n\r\nconst ReportHead = ({ title, count, listOpen, onClick }: Props) => (\r\n  <Button onClick={onClick}>\r\n    <StyledHeadline>{title}</StyledHeadline>\r\n    <div>\r\n      <StyledCount>{count}</StyledCount>\r\n      <StyledArrow isActive={listOpen} />\r\n    </div>\r\n  </Button>\r\n);\r\n\r\nexport default ReportHead;\r\n","import styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getMinutes, getSeconds } from 'utils';\r\n\r\nimport List from 'components/atoms/List/List';\r\nimport ListItem from 'components/atoms/ListItem/ListItem';\r\nimport Label from 'components/atoms/Label/Label';\r\n\r\nconst SessionItem = styled(ListItem)`\r\n  padding: 7px 10px;\r\n\r\n  @media (min-width: 960px) {\r\n    display: flex;\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nconst SessionDetails = styled.div`\r\n  margin-right: 20px;\r\n  font-weight: 300;\r\n  font-size: 14px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n\r\n  @media (min-width: 960px) {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n\r\nconst Time = styled.span`\r\n  font-weight: 400px;\r\n  font-size: 18px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  margin-left: 15px;\r\n`;\r\n\r\ninterface Props {\r\n  listOpen: boolean;\r\n  sessions: {\r\n    id: string;\r\n    sessionTime: number;\r\n    restTime: number;\r\n    date?: string;\r\n  }[];\r\n}\r\n\r\nconst ReportList = ({ listOpen, sessions }: Props) => (\r\n  <>\r\n    {listOpen && (\r\n      <List>\r\n        {sessions.map((item) => (\r\n          <SessionItem key={item.id}>\r\n            <SessionDetails>\r\n              Session time:\r\n              <Time>{`${getMinutes(item.sessionTime)} : ${getSeconds(\r\n                item.sessionTime\r\n              )}`}</Time>\r\n            </SessionDetails>\r\n            <SessionDetails>\r\n              Rest time:\r\n              <Time>{`${getMinutes(item.restTime)} : ${getSeconds(\r\n                item.restTime\r\n              )}`}</Time>\r\n            </SessionDetails>\r\n            {item.date && (\r\n              <SessionDetails>\r\n                <Label>{item.date}</Label>\r\n              </SessionDetails>\r\n            )}\r\n          </SessionItem>\r\n        ))}\r\n      </List>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ReportList;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getFormat } from 'utils';\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport { Reports } from 'models/ReportsByDate.model';\r\n\r\nimport List from 'components/atoms/List/List';\r\nimport ReportHead from 'components/molecules/ReportHead/ReportHead';\r\nimport Label from 'components/atoms/Label/Label';\r\nimport ReportList from 'components/molecules/ReportList/ReportList';\r\n\r\nconst ListItem = styled.li`\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.colors.copy};\r\n`;\r\n\r\ninterface State {\r\n  projects: ProjectsState;\r\n}\r\n\r\ninterface Props {\r\n  reports?: Reports;\r\n}\r\n\r\nconst ReportsByDate = ({ reports }: Props) => {\r\n  const [openList, setOpenList] = useState<string>('');\r\n  const projects = useSelector(({ projects }: State) => projects.projectsList);\r\n\r\n  return (\r\n    <div>\r\n      {reports &&\r\n        reports.map((projectList) => (\r\n          <div key={`${projectList.date}`}>\r\n            <Label>{getFormat(projectList.date)}</Label>\r\n\r\n            <List>\r\n              {projectList.projects.map((project) => (\r\n                <ListItem key={project.id}>\r\n                  <ReportHead\r\n                    title={\r\n                      projects.find((el) => el.id === project.projectId)\r\n                        ?.name || 'No project'\r\n                    }\r\n                    count={project.count}\r\n                    listOpen={openList === project.id}\r\n                    onClick={() =>\r\n                      setOpenList((prev) =>\r\n                        prev === project.id ? '' : project.id\r\n                      )\r\n                    }\r\n                  />\r\n                  <ReportList\r\n                    listOpen={openList === project.id}\r\n                    sessions={project.sessions.map((session) => ({\r\n                      id: String(Math.random()),\r\n                      sessionTime: session.actionTime,\r\n                      restTime: session.restTime,\r\n                    }))}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsByDate;\r\n\r\n// reports {\r\n//   reports [\r\n// {\r\n//   date: '2020-03-02',\r\n//   projectId: 'NOPROJECT',\r\n//   session:{\r\n//     sessionId: '2345547346745643',\r\n//     actionTime: 2425436,\r\n//     restTime: 213456546\r\n//   }\r\n// },\r\n// {\r\n//   date: '2020-03-02',\r\n//   projectId: 'NOPROJECT',\r\n//   session:{\r\n//     sessionId: '2345547346745643',\r\n//     actionTime: 2425436,\r\n//     restTime: 213456546\r\n//   }\r\n// }\r\n//   ]\r\n// }\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport { ProjectsList } from 'models/ReportsByProject.model';\r\n\r\nimport { getFormat } from 'utils';\r\n\r\nimport List from 'components/atoms/List/List';\r\nimport ListItem from 'components/atoms/ListItem/ListItem';\r\n\r\nimport ReportHead from 'components/molecules/ReportHead/ReportHead';\r\nimport ReportList from 'components/molecules/ReportList/ReportList';\r\n\r\ninterface State {\r\n  projects: ProjectsState;\r\n}\r\n\r\ninterface Props {\r\n  reports?: ProjectsList;\r\n}\r\n\r\nconst ReportsByProjects = ({ reports }: Props) => {\r\n  const [openList, setOpenList] = useState<string>('');\r\n  const projectsList = useSelector(\r\n    ({ projects }: State) => projects.projectsList\r\n  );\r\n\r\n  return (\r\n    <List>\r\n      {reports &&\r\n        reports.map((projects) => (\r\n          <ListItem key={projects.id}>\r\n            <ReportHead\r\n              title={\r\n                projectsList.find((p) => p.id === projects.id)?.name ||\r\n                'No project'\r\n              }\r\n              count={projects.count}\r\n              listOpen={openList === projects.id}\r\n              onClick={() =>\r\n                setOpenList((prev) => (prev === projects.id ? '' : projects.id))\r\n              }\r\n            />\r\n\r\n            <ReportList\r\n              listOpen={openList === projects.id}\r\n              sessions={projects?.sessions.map((i: any) => ({\r\n                id: String(Math.random()),\r\n                date: getFormat(i.date),\r\n                sessionTime: i.actionTime,\r\n                restTime: i.restTime,\r\n              }))}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ReportsByProjects;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PageTemplate from 'templates/PageTemplate';\r\nimport PageTitle from 'components/atoms/PageTitle/PageTitle';\r\nimport RadioForm from 'components/molecules/RadioForm/RadioForm';\r\nimport { Reports } from 'models/ReportsByDate.model';\r\n\r\nimport { ReportsState } from 'store/reports/types';\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport ReportsByDate from 'components/molecules/ReportsByDate/ReportsByDate';\r\nimport ReportsByProjects from 'components/molecules/ReportsByProjects/ReportsByProjects';\r\n\r\nimport { ProjectsList } from 'models/ReportsByProject.model';\r\n\r\ninterface State {\r\n  reports: ReportsState;\r\n  projects: ProjectsState;\r\n}\r\n\r\nfunction HistoryPage() {\r\n  const [isByDate, toggleByDate] = useState<boolean>(true);\r\n  const reports = useSelector(({ reports }: State) => reports.reports);\r\n\r\n  const [sortByDate, setSortByDate] = useState<Reports>([]);\r\n  const [sortByProjects, setSortByProjects] = useState<ProjectsList>([]);\r\n\r\n  useEffect(() => {\r\n    const arr: ProjectsList = [];\r\n\r\n    if (!!reports.length) {\r\n      reports.forEach((r) => {\r\n        const isIndexProjectExist = arr.findIndex((i) => i.id === r.projectId);\r\n\r\n        if (isIndexProjectExist === -1) {\r\n          const newProject = {\r\n            id: r.projectId,\r\n            count: 1,\r\n            sessions: [\r\n              {\r\n                id: `${r.date}_${r.projectId}`,\r\n                date: r.date,\r\n                actionTime: r.session.actionTime,\r\n                restTime: r.session.restTime,\r\n              },\r\n            ],\r\n          };\r\n\r\n          arr.push(newProject);\r\n        } else {\r\n          const existingProject = arr[isIndexProjectExist];\r\n          existingProject.count = existingProject.count + 1;\r\n          existingProject.sessions = [\r\n            ...existingProject.sessions,\r\n            {\r\n              id: `${r.date}_${r.projectId}`,\r\n              date: r.date,\r\n              actionTime: r.session.actionTime,\r\n              restTime: r.session.restTime,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n    }\r\n\r\n    setSortByProjects(arr);\r\n  }, [reports]);\r\n\r\n  useEffect(() => {\r\n    const arr: Reports = [];\r\n\r\n    if (!!reports.length) {\r\n      reports.forEach((el) => {\r\n        const indexIfDateExist = arr.findIndex(\r\n          (i) => i.date.setHours(0, 0, 0, 0) === el.date.setHours(0, 0, 0, 0)\r\n        );\r\n\r\n        if (indexIfDateExist === -1) {\r\n          const reportsByDate = {\r\n            date: el.date,\r\n            projects: [\r\n              {\r\n                id: `${el.date.setHours(0, 0, 0, 0)}_${el.projectId}`,\r\n                projectId: el.projectId,\r\n                count: 1,\r\n                sessions: [\r\n                  {\r\n                    actionTime: el.session.actionTime,\r\n                    restTime: el.session.restTime,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          };\r\n\r\n          arr.push(reportsByDate);\r\n        } else {\r\n          const { projects } = arr[indexIfDateExist];\r\n\r\n          const indexIfProjectExist = projects.findIndex(\r\n            (project: any) =>\r\n              project.id === `${el.date.setHours(0, 0, 0, 0)}_${el.projectId}`\r\n          );\r\n\r\n          if (indexIfProjectExist === -1) {\r\n            const newProject = {\r\n              id: `${el.date.setHours(0, 0, 0, 0)}_${el.projectId}`,\r\n              projectId: el.projectId,\r\n              count: 1,\r\n              sessions: [\r\n                {\r\n                  actionTime: el.session.actionTime,\r\n                  restTime: el.session.restTime,\r\n                },\r\n              ],\r\n            };\r\n\r\n            projects.push(newProject);\r\n          } else {\r\n            const projectExist = projects[indexIfProjectExist];\r\n            projectExist.count = projectExist.count + 1;\r\n            projectExist.sessions = [\r\n              ...projectExist.sessions,\r\n              {\r\n                actionTime: el.session.actionTime,\r\n                restTime: el.session.restTime,\r\n              },\r\n            ];\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    setSortByDate(arr);\r\n  }, [reports]);\r\n\r\n  return (\r\n    <PageTemplate isSubPage>\r\n      <PageTitle>Pomodoro History</PageTitle>\r\n      <RadioForm\r\n        inputs={[\r\n          {\r\n            id: 'byDate',\r\n            label: 'By date',\r\n            type: 'radio',\r\n            name: 'sort',\r\n            onChange: () => toggleByDate(true),\r\n            checked: isByDate,\r\n          },\r\n          {\r\n            id: 'byProjects',\r\n            label: 'By project',\r\n            type: 'radio',\r\n            name: 'sort',\r\n            onChange: () => toggleByDate(false),\r\n            checked: !isByDate,\r\n          },\r\n        ]}\r\n      />\r\n      {isByDate ? (\r\n        <ReportsByDate reports={sortByDate} />\r\n      ) : (\r\n        <ReportsByProjects reports={sortByProjects} />\r\n      )}\r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport PageTemplate from 'templates/PageTemplate';\r\nimport Headline from 'components/atoms/Headline/Headline';\r\n\r\nimport PageTitle from 'components/atoms/PageTitle/PageTitle';\r\nimport RadioForm from 'components/molecules/RadioForm/RadioForm';\r\nimport { setThemeColor } from 'store/settings/actions';\r\nimport { setDefaultCycle } from 'store/cycle/actions';\r\nimport { ThemeColor, ThemeColorTypes } from 'store/settings/types';\r\nimport { Session, SessionEnum } from 'store/cycle/types';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport TimeInputBox from 'components/molecules/TimeInputBox/TimeInputBox';\r\n\r\nconst DefaultTimeBox = styled.div`\r\n  > label {\r\n    margin-top: 30px;\r\n\r\n    &:last-child {\r\n      margin-bottom: 30px;\r\n\r\n      @media (min-width: 960px) {\r\n        margin-bottom: 18px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    display: flex;\r\n\r\n    > label {\r\n      &:first-child {\r\n        margin-right: 20px;\r\n      }\r\n\r\n      &:last-child {\r\n        margin-left: 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledHeadline = styled(Headline)`\r\n  margin-bottom: 14px;\r\n\r\n  @media (min-width: 960px) {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst Section = styled.section`\r\n  margin-top: 40px;\r\n`;\r\n\r\ninterface RootState {\r\n  settings: {\r\n    colorTheme: ThemeColor;\r\n  };\r\n  cycle: {\r\n    defaultCycle: Session[];\r\n  };\r\n}\r\n\r\nconst mapState = (state: RootState) => ({\r\n  colorTheme: state.settings.colorTheme,\r\n  defaultCycle: state.cycle.defaultCycle,\r\n});\r\n\r\nconst mapDispatch = {\r\n  setThemeColor: (option: ThemeColor) => setThemeColor(option),\r\n  setDefaultCycle: (session: Session[]) => setDefaultCycle(session),\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst SettingsPage = ({\r\n  colorTheme,\r\n  defaultCycle,\r\n  setThemeColor,\r\n  setDefaultCycle,\r\n}: PropsFromRedux) => (\r\n  <PageTemplate isSubPage>\r\n    <PageTitle screenreaderOnly>Settings</PageTitle>\r\n    <Section>\r\n      <StyledHeadline>Theme color</StyledHeadline>\r\n      <RadioForm\r\n        inputs={[\r\n          {\r\n            id: 'dark',\r\n            label: 'Dark',\r\n            type: 'radio',\r\n            name: 'themeColor',\r\n            onChange: () => setThemeColor(ThemeColorTypes.DARK),\r\n            checked: colorTheme === ThemeColorTypes.DARK,\r\n          },\r\n          {\r\n            id: 'light',\r\n            label: 'Light',\r\n            type: 'radio',\r\n            name: 'themeColor',\r\n            onChange: () => setThemeColor(ThemeColorTypes.LIGHT),\r\n            checked: colorTheme === ThemeColorTypes.LIGHT,\r\n          },\r\n        ]}\r\n      />\r\n    </Section>\r\n    <Section>\r\n      <StyledHeadline>Default cycle time</StyledHeadline>\r\n      <DefaultTimeBox>\r\n        <TimeInputBox\r\n          label=\"session time\"\r\n          onChange={(value: number) =>\r\n            setDefaultCycle([\r\n              [\r\n                { type: SessionEnum.ACTION, time: value },\r\n                { type: SessionEnum.REST, time: defaultCycle[0][1].time },\r\n              ],\r\n            ])\r\n          }\r\n          maxValue={60}\r\n          value={defaultCycle[0][0].time}\r\n        />\r\n        <TimeInputBox\r\n          label=\"rest time\"\r\n          onChange={(value: number) =>\r\n            setDefaultCycle([\r\n              [\r\n                { type: SessionEnum.ACTION, time: defaultCycle[0][0].time },\r\n                { type: SessionEnum.REST, time: value },\r\n              ],\r\n            ])\r\n          }\r\n          maxValue={60}\r\n          value={defaultCycle[0][1].time}\r\n        />\r\n      </DefaultTimeBox>\r\n    </Section>\r\n  </PageTemplate>\r\n);\r\n\r\nexport default connector(SettingsPage);\r\n","export interface Report {\r\n  date: Date;\r\n  projectId: string;\r\n  session: {\r\n    sessionId: string;\r\n    actionTime: number;\r\n    restTime: number;\r\n  };\r\n}\r\n\r\nexport interface ReportsState {\r\n  reports: Report[];\r\n}\r\n\r\nexport enum ReportsTypes {\r\n  ADD_REPORT = 'ADD_REPORT',\r\n  UPDATE_REPORT = 'UPDATE_REPORT',\r\n}\r\n\r\nexport interface AddReportAction {\r\n  type: typeof ReportsTypes.ADD_REPORT;\r\n  payload: Report;\r\n}\r\n\r\nexport interface UpdateReportAction {\r\n  type: typeof ReportsTypes.UPDATE_REPORT;\r\n  payload: Report;\r\n}\r\n\r\nexport type ReportActionTypes = AddReportAction | UpdateReportAction;\r\n","import { SettingsActionTypes, SettingsTypes, ThemeColor } from './types';\r\n\r\nexport const setThemeColor = (option: ThemeColor): SettingsActionTypes => ({\r\n  type: SettingsTypes.SET_THEME_COLOR,\r\n  payload: {\r\n    option,\r\n  },\r\n});\r\n","import { ReportsTypes, Report } from './types';\r\n\r\nexport const addReport = (newReport: Report) => ({\r\n  type: ReportsTypes.ADD_REPORT,\r\n  payload: newReport,\r\n});\r\n\r\nexport const updateReport = (report: Report) => ({\r\n  type: ReportsTypes.UPDATE_REPORT,\r\n  payload: report,\r\n});\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport TimerPage from './TimerPage';\r\nimport MainTemplate from '../templates/MainTemplate';\r\nimport { Routes } from 'routes';\r\nimport { AppContext } from 'context';\r\nimport { useInterval } from 'hooks/useInterval';\r\nimport CycleModal from 'components/organisms/CycleModal/CycleModal';\r\nimport ProjectsPage from './ProjectsPage';\r\nimport HistoryPage from './HistoryPage';\r\nimport SettingsPage from './SettingsPage';\r\nimport { CyclesState, Session, SessionTypes } from 'store/cycle/types';\r\nimport {\r\n  clearCycle,\r\n  setCurrentTime,\r\n  setCurrentType,\r\n  toggleTimerRunning,\r\n  setCyclePosition,\r\n  setSessionInProgress,\r\n  setSessionPosition,\r\n  setNextSessionPosition,\r\n  setNextTime,\r\n} from 'store/cycle/actions';\r\nimport { addReport, updateReport } from 'store/reports/actions';\r\nimport { Report } from 'store/reports/types';\r\nimport { ProjectsState } from 'store/projects/types';\r\nimport { generateUnicId } from 'utils';\r\nimport { ReportsState } from 'store/reports/types';\r\n\r\ninterface RootState {\r\n  cycle: CyclesState;\r\n  projects: ProjectsState;\r\n  reports: ReportsState;\r\n}\r\n\r\nconst mapState = ({ cycle, projects, reports }: RootState) => ({\r\n  customCycle: cycle.customCycle,\r\n  defaultCycle: cycle.defaultCycle,\r\n  currentTime: cycle.currentTime,\r\n  isSessionInProgress: cycle.isSessionInProgress,\r\n  isRunning: cycle.isRunning,\r\n  projectSelected: projects.projectSelected,\r\n  reports: reports.reports,\r\n  nextSessionPosition: cycle.nextSessionPosition,\r\n});\r\n\r\nconst mapDispatch = {\r\n  clearCycle: () => clearCycle(),\r\n  setCurrentTime: (time: number) => setCurrentTime(time),\r\n  setCurrentType: (type: SessionTypes) => setCurrentType(type),\r\n  toggleTimerRunning: (isRunning: boolean) => toggleTimerRunning(isRunning),\r\n  setCyclePosition: (position: number) => setCyclePosition(position),\r\n  setSessionInProgress: (isInProgress: boolean) =>\r\n    setSessionInProgress(isInProgress),\r\n  addReport: (newReport: Report) => addReport(newReport),\r\n  updateReport: (newReport: Report) => updateReport(newReport),\r\n  setSessionPosition: (position: number) => setSessionPosition(position),\r\n  setNextSessionPosition: (position: number) =>\r\n    setNextSessionPosition(position),\r\n  setNextTime: (nextTime: number) => setNextTime(nextTime),\r\n};\r\n\r\nconst connector = connect(mapState, mapDispatch);\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface CurrentSessionType {\r\n  session: Session;\r\n  sessionId: string;\r\n}\r\n\r\nfunction Root({\r\n  customCycle,\r\n  currentTime,\r\n  defaultCycle,\r\n  isRunning,\r\n  isSessionInProgress,\r\n  projectSelected,\r\n  reports,\r\n  nextSessionPosition,\r\n  clearCycle,\r\n  setCurrentTime,\r\n  setCurrentType,\r\n  toggleTimerRunning,\r\n  setCyclePosition,\r\n  setSessionInProgress,\r\n  addReport,\r\n  updateReport,\r\n  setSessionPosition,\r\n  setNextSessionPosition,\r\n  setNextTime,\r\n}: PropsFromRedux) {\r\n  const [isModalVisible, toggleModalVisibility] = useState<boolean>(false);\r\n  const [currentSession, setCurrentSession] = useState<CurrentSessionType>({\r\n    session: defaultCycle[0],\r\n    sessionId: 'SESSION_ID',\r\n  });\r\n\r\n  const getCycle = (customCycle: Session[], defaultCycle: Session[]) =>\r\n    !!customCycle.length ? customCycle : defaultCycle;\r\n\r\n  const getCycleType = (customCycle: Session[]) =>\r\n    !!customCycle.length ? 'CUSTOM' : 'DEFAULT';\r\n\r\n  const [cycleType, setCycleType] = useState<'CUSTOM' | 'DEFAULT'>(\r\n    getCycleType(customCycle)\r\n  );\r\n  const [cycle, setCycle] = useState<Session[]>(\r\n    getCycle(customCycle, defaultCycle)\r\n  );\r\n\r\n  const [curCyclePosition, setCurCyclePosition] = useState<number>(0);\r\n  const [curSessionPosition, setCurSessionPosition] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (isSessionInProgress || isRunning) return;\r\n\r\n    setCycle(getCycle(customCycle, defaultCycle));\r\n    setCycleType(getCycleType(customCycle));\r\n\r\n    if (curSessionPosition === 0)\r\n      setCurrentSession({\r\n        session: cycle[curCyclePosition],\r\n        sessionId: generateUnicId([]),\r\n      });\r\n  }, [\r\n    curCyclePosition,\r\n    curSessionPosition,\r\n    customCycle,\r\n    cycle,\r\n    defaultCycle,\r\n    isRunning,\r\n    isSessionInProgress,\r\n  ]);\r\n\r\n  function getNextTime() {\r\n    if (cycle.length - 1 === curCyclePosition && curSessionPosition === 1) {\r\n      return defaultCycle[0][0].time;\r\n    } else if (curSessionPosition === 1) {\r\n      return cycle[curCyclePosition + 1][0].time;\r\n    } else {\r\n      return cycle[curCyclePosition][1].time;\r\n    }\r\n  }\r\n\r\n  const getNextTimeCallback = useCallback(getNextTime, [\r\n    cycle,\r\n    curCyclePosition,\r\n    curSessionPosition,\r\n    defaultCycle,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (customCycle.length === 0) {\r\n      setCurSessionPosition(0);\r\n      setSessionPosition(0);\r\n      setNextSessionPosition(1);\r\n      setCurCyclePosition(0);\r\n    }\r\n  }, [customCycle, setNextSessionPosition, setSessionPosition]);\r\n\r\n  useEffect(() => {\r\n    setCurrentTime(cycle[curCyclePosition][curSessionPosition].time);\r\n    setCurrentType(cycle[curCyclePosition][curSessionPosition].type);\r\n\r\n    setNextTime(getNextTimeCallback());\r\n  }, [\r\n    curCyclePosition,\r\n    curSessionPosition,\r\n    cycle,\r\n    getNextTimeCallback,\r\n    setCurrentTime,\r\n    setCurrentType,\r\n    setNextTime,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setCyclePosition(curCyclePosition);\r\n  }, [curCyclePosition, setCyclePosition]);\r\n\r\n  function countdown() {\r\n    setCurrentTime(currentTime - 10);\r\n  }\r\n\r\n  const [start, stop] = useInterval(countdown, 10, false);\r\n\r\n  function onStartCountdow() {\r\n    setSessionInProgress(true);\r\n    start();\r\n    toggleTimerRunning(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentTime - 10 < 0) {\r\n      stop();\r\n      toggleTimerRunning(false);\r\n    }\r\n  }, [currentTime, stop, toggleTimerRunning]);\r\n\r\n  function onPauseCountdown() {\r\n    stop();\r\n    toggleTimerRunning(false);\r\n  }\r\n\r\n  function onStopCountdown() {\r\n    setSessionInProgress(false);\r\n    stop();\r\n    toggleTimerRunning(false);\r\n\r\n    if (curSessionPosition === 0) {\r\n      setCurSessionPosition(1);\r\n      setSessionPosition(1);\r\n      setNextSessionPosition(0);\r\n\r\n      addReport({\r\n        date: new Date(),\r\n        projectId: projectSelected.id,\r\n        session: {\r\n          sessionId: currentSession?.sessionId,\r\n          actionTime: currentSession?.session[0].time - currentTime + 1000,\r\n          restTime: 0,\r\n        },\r\n      });\r\n    } else if (curSessionPosition === 1) {\r\n      setCurSessionPosition(0);\r\n      setSessionPosition(0);\r\n      setNextSessionPosition(1);\r\n\r\n      updateReport({\r\n        date: new Date(),\r\n        projectId: projectSelected.id,\r\n        session: {\r\n          sessionId: currentSession?.sessionId,\r\n          actionTime:\r\n            reports.find(\r\n              (i) => i.session.sessionId === currentSession?.sessionId\r\n            )?.session.actionTime || 0,\r\n          restTime: currentSession?.session[1].time - currentTime + 1000,\r\n        },\r\n      });\r\n\r\n      if (cycleType === 'CUSTOM' && curCyclePosition + 1 > cycle.length - 1) {\r\n        clearCycle();\r\n      }\r\n\r\n      setCurCyclePosition(\r\n        curCyclePosition + 1 > cycle.length - 1 ? 0 : curCyclePosition + 1\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleOpenModal() {\r\n    toggleModalVisibility(true);\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    toggleModalVisibility(false);\r\n  }\r\n\r\n  const AppContextElements = {\r\n    handleOpenModal,\r\n    handleCloseModal,\r\n    onStartCountdow,\r\n    onPauseCountdown,\r\n    onStopCountdown,\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <AppContext.Provider value={AppContextElements}>\r\n        <MainTemplate>\r\n          <Switch>\r\n            <Route exact path={Routes.timer} component={TimerPage} />\r\n            <Route exact path={Routes.projects} component={ProjectsPage} />\r\n            <Route exact path={Routes.history} component={HistoryPage} />\r\n            <Route exact path={Routes.settings} component={SettingsPage} />\r\n          </Switch>\r\n          {isModalVisible && <CycleModal onClose={handleCloseModal} />}\r\n        </MainTemplate>\r\n      </AppContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default connector(Root);\r\n","import { ProjectsState, ProjectsActionTypes, ProjectsTypes } from './types';\r\n\r\nconst initialState: ProjectsState = {\r\n  projectsList: [],\r\n  projectSelected: {\r\n    id: 'NOPROJECT',\r\n    name: 'NO PROJECT',\r\n    sessionCount: 0,\r\n  },\r\n};\r\n\r\nexport function projectReducer(\r\n  state = initialState,\r\n  action: ProjectsActionTypes\r\n): ProjectsState {\r\n  switch (action.type) {\r\n    case ProjectsTypes.ADD_PROJECT:\r\n      return {\r\n        ...state,\r\n        projectsList: [...state.projectsList, action.payload],\r\n      };\r\n    case ProjectsTypes.REMOVE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projectsList: [\r\n          ...state.projectsList.filter((p) => p.id !== action.payload.id),\r\n        ],\r\n      };\r\n    case ProjectsTypes.UPDATE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projectsList: [\r\n          ...state.projectsList.map((p) =>\r\n            p.id === action.payload.id ? action.payload : p\r\n          ),\r\n        ],\r\n      };\r\n    case ProjectsTypes.SET_SELECTED_PROJECT:\r\n      return {\r\n        ...state,\r\n        projectSelected: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CyclesState,\r\n  CycleActionTypes,\r\n  CyclesTypes,\r\n  SessionEnum,\r\n} from './types';\r\n\r\nconst initialState: CyclesState = {\r\n  sessionPosition: 0,\r\n  nextSessionPosition: 1,\r\n  cyclePosition: 0,\r\n  isRunning: false,\r\n  isSessionInProgress: false,\r\n  currentTime: 0,\r\n  nextTime: 0,\r\n  currentType: SessionEnum.ACTION,\r\n  nextType: SessionEnum.REST,\r\n  customCycle: [\r\n    [\r\n      { type: SessionEnum.ACTION, time: 40 * 60 * 1000 },\r\n      { type: SessionEnum.REST, time: 8 * 60 * 1000 },\r\n    ],\r\n    [\r\n      { type: SessionEnum.ACTION, time: 35 * 60 * 1000 },\r\n      { type: SessionEnum.REST, time: 7 * 60 * 1000 },\r\n    ],\r\n    [\r\n      { type: SessionEnum.ACTION, time: 30 * 60 * 1000 },\r\n      { type: SessionEnum.REST, time: 6 * 60 * 1000 },\r\n    ],\r\n  ],\r\n  defaultCycle: [\r\n    [\r\n      { type: SessionEnum.ACTION, time: 25 * 60 * 1000 },\r\n      { type: SessionEnum.REST, time: 5 * 60 * 1000 },\r\n    ],\r\n  ],\r\n};\r\n\r\nexport function cycleReducer(state = initialState, action: CycleActionTypes) {\r\n  switch (action.type) {\r\n    case CyclesTypes.ADD_TO_CYCLE:\r\n      return {\r\n        ...state,\r\n        customCycle: [...state.customCycle, ...action.payload],\r\n      };\r\n    case CyclesTypes.CLEAR_AND_ADD_TO_CYCLE:\r\n      return {\r\n        ...state,\r\n        customCycle: [...action.payload],\r\n      };\r\n    case CyclesTypes.CLEAR_CYCLE:\r\n      return {\r\n        ...state,\r\n        customCycle: [],\r\n      };\r\n    case CyclesTypes.SET_CURRENT_TIME:\r\n      return {\r\n        ...state,\r\n        currentTime: action.payload.time,\r\n      };\r\n    case CyclesTypes.SET_DEFAULT_CYCLE:\r\n      return {\r\n        ...state,\r\n        defaultCycle: [...action.payload],\r\n      };\r\n    case CyclesTypes.SET_CURRENT_TYPE:\r\n      return {\r\n        ...state,\r\n        currentType: action.payload.type,\r\n      };\r\n    case CyclesTypes.TOGGLE_TIMER_RUNNING:\r\n      return {\r\n        ...state,\r\n        isRunning: action.payload.isRunning,\r\n      };\r\n    case CyclesTypes.SET_CYCLE_POSITION:\r\n      return {\r\n        ...state,\r\n        cyclePosition: action.payload.position,\r\n      };\r\n    case CyclesTypes.SET_SESSION_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        isSessionInProgress: action.payload.isInProgress,\r\n      };\r\n    case CyclesTypes.SET_SESSION_POSITION:\r\n      return {\r\n        ...state,\r\n        sessionPosition: action.payload.position,\r\n      };\r\n    case CyclesTypes.SET_NEXT_SESSION_POSITION:\r\n      return {\r\n        ...state,\r\n        nextSessionPosition: action.payload.position,\r\n      };\r\n    case CyclesTypes.SET_NEXT_TIME:\r\n      return {\r\n        ...state,\r\n        nextTime: action.payload.nextTime,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SettingsState,\r\n  ThemeColorTypes,\r\n  SettingsTypes,\r\n  SettingsActionTypes,\r\n} from './types';\r\n\r\nconst initialState: SettingsState = {\r\n  colorTheme: ThemeColorTypes.DARK,\r\n};\r\n\r\nexport function settingsReducer(\r\n  state = initialState,\r\n  action: SettingsActionTypes\r\n): SettingsState {\r\n  switch (action.type) {\r\n    case SettingsTypes.SET_THEME_COLOR:\r\n      return {\r\n        colorTheme: action.payload.option,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ReportsState, ReportActionTypes, ReportsTypes } from './types';\r\n\r\n// {\r\n//   date: new Date(2020, 5, 23),\r\n//   projectId: 'PROJECT_123',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 45 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 23),\r\n//   projectId: 'PROJECT_123',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 23),\r\n//   projectId: 'PROJECT_12345',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 23),\r\n//   projectId: 'PROJECT_12345',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 22),\r\n//   projectId: 'PROJECT_1234567',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 22),\r\n//   projectId: 'PROJECT_12345',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 22),\r\n//   projectId: 'PROJECT_12345124',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 21),\r\n//   projectId: 'PROJECT_123452324',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 21),\r\n//   projectId: 'PROJECT_123452324',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 12),\r\n//   projectId: 'PROJECT_123452324',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n// {\r\n//   date: new Date(2020, 5, 12),\r\n//   projectId: 'PROJECT_123452324',\r\n//   session: {\r\n//     sessionId: `${Math.random() * Math.random()}`,\r\n//     actionTime: 40 * 60 * 1000,\r\n//     restTime: 5 * 60 * 1000,\r\n//   },\r\n// },\r\n\r\nconst initialState: ReportsState = {\r\n  reports: [],\r\n};\r\n\r\nexport function reportReducer(state = initialState, action: ReportActionTypes) {\r\n  switch (action.type) {\r\n    case ReportsTypes.ADD_REPORT:\r\n      return {\r\n        ...state,\r\n        reports: [...state.reports, action.payload],\r\n      };\r\n    case ReportsTypes.UPDATE_REPORT:\r\n      return {\r\n        ...state,\r\n        reports: [\r\n          ...state.reports.map((i) =>\r\n            i.session.sessionId === action.payload.session.sessionId\r\n              ? action.payload\r\n              : i\r\n          ),\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { projectReducer } from './projects/reducers';\r\nimport { cycleReducer } from './cycle/reducers';\r\nimport { settingsReducer } from './settings/reducers';\r\nimport { reportReducer } from './reports/reducers';\r\n\r\nexport const rootReducer = combineReducers({\r\n  projects: projectReducer,\r\n  cycle: cycleReducer,\r\n  settings: settingsReducer,\r\n  reports: reportReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { rootReducer } from './rootReducer';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(ReduxThunk))\r\n);\r\n\r\nexport default store;\r\n","import React, { FC } from 'react';\nimport Root from './views/Root';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nconst App: FC = () => (\n  <Provider store={store}>\n    <Root />\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}